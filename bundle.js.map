{"version":3,"file":"bundle.js","sourceRoot":"","sources":["src/Connection.ts","src/GameData.ts","src/area.ts","src/entity.ts","src/character.ts","src/checkpoint.ts","src/item.ts","src/chest.ts","src/chestarea.ts","src/format.ts","src/formulas.ts","src/gameServer.ts","src/gametypes.ts","src/map.ts","src/message.ts","src/mob.ts","src/mobarea.ts","src/npc.ts","src/player.ts","src/properties.ts","src/utilapi.ts","src/utils.ts","src/worldserver.ts","src/typings/mgobexsInterface.ts"],"names":[],"mappings":"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","sourcesContent":["namespace server {\r\n    export class Connection {\r\n        id: string\r\n        SDK: ActionArgsSDK\r\n\r\n        constructor(id: string, SDK: ActionArgsSDK) {\r\n            this.id = id\r\n            this.SDK = SDK\r\n        }\r\n\r\n        on_listen: (msg: any) => void\r\n\r\n        /**\r\n         * 监听此客户端发来消息\r\n         * @param fun 回调函数\r\n         */\r\n        listen(fun: (msg: any) => void) {\r\n            this.on_listen = fun\r\n        }\r\n\r\n        on_Close: () => void\r\n\r\n        /**\r\n         * 监听连接关闭\r\n         */\r\n        onClose(fun: () => void) {\r\n            this.on_Close = fun\r\n        }\r\n\r\n        /**\r\n         * 发送消息给客户端\r\n         * @param msg \r\n         */\r\n        send(msg: string) {\r\n            this.SDK.sendData({ playerIdList: [this.id], data: { msg: msg } })\r\n        }\r\n\r\n        /**\r\n         * 发送UTF8字符串给客户端\r\n         * @param msg \r\n         */\r\n        sendUTF8(msg: string) {\r\n            this.send(msg)\r\n        }\r\n\r\n        /**\r\n         * 与客户端断开连接\r\n         * @param msg 原因\r\n         */\r\n        close(msg: string) {\r\n\r\n        }\r\n\r\n        // onError(function () {\r\n        //     //输出异常日志\r\n        //     console.error(Array.prototype.join.call(arguments, \", \"))\r\n        // })\r\n\r\n        // onRequestStatus(function () {\r\n        //     return JSON.stringify(getWorldDistribution(worlds))\r\n        // })\r\n    }\r\n}","namespace server {\r\n    export class GameData {\r\n        static async InitGameData() {\r\n            //1.加载配置文件\r\n            //let config = readFile('config.json','utf8',(err,data)=>{\r\n            let p = loadFile('config.json', 'utf8')\r\n            let config = await p\r\n            console.log(config)\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class Area{\r\n        id: any;\r\n        x: any;\r\n        y: any;\r\n        width: any;\r\n        height: any;\r\n        world: any;\r\n        entities: any[];\r\n        hasCompletelyRespawned: boolean;\r\n        empty_callback: any;\r\n        nbEntities: any;\r\n        constructor(id, x, y, width, height, world){\r\n            this.id = id;\r\n            this.x = x;\r\n            this.y = y;\r\n            this.width = width;\r\n            this.height = height;\r\n            this.world = world;\r\n            this.entities = [];\r\n            this.hasCompletelyRespawned = true;\r\n        }\r\n        \r\n        _getRandomPositionInsideArea () {\r\n            var pos = {x:0,y:0},\r\n                valid = false;\r\n            \r\n            while(!valid) {\r\n                \r\n                pos.x = this.x + Utils.random(this.width + 1);\r\n                pos.y = this.y + Utils.random(this.height + 1);\r\n                valid = this.world.isValidPosition(pos.x, pos.y);\r\n            }\r\n            return pos;\r\n        }\r\n        \r\n        removeFromArea (entity) {\r\n            //在entities中循环所有元素,将有id属性的id列表返回\r\n            //计算entity.id在id列表中的下标\r\n            // var i = _.indexOf(_.pluck(this.entities, 'id'), entity.id);\r\n            // this.entities.splice(i, 1);\r\n            let array = this.entities\r\n            for (let index = 0; index < array.length; index++) {\r\n                const element = array[index]\r\n                if(element.id == entity.id){\r\n                    array.splice(index,1)\r\n                    break\r\n                }\r\n            }\r\n            \r\n            if(this.isEmpty() && this.hasCompletelyRespawned && this.empty_callback) {\r\n                this.hasCompletelyRespawned = false;\r\n                this.empty_callback();\r\n            }\r\n        }\r\n        \r\n        addToArea (entity) {\r\n            if(entity) {\r\n                this.entities.push(entity);\r\n                entity.area = this;\r\n                if(entity instanceof Mob) {\r\n                    this.world.addMob(entity);\r\n                }\r\n            }\r\n            \r\n            if(this.isFull()) {\r\n                this.hasCompletelyRespawned = true;\r\n            }\r\n        }\r\n        \r\n        setNumberOfEntities (nb) {\r\n            this.nbEntities = nb;\r\n        }\r\n        \r\n        isEmpty () {\r\n            let array = this.entities\r\n            for (let index = 0; index < array.length; index++) {\r\n                const entity = array[index];\r\n                if(!entity.isDead){\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        \r\n        isFull () {\r\n            return !this.isEmpty() && (this.nbEntities === this.entities.length);\r\n        }\r\n        \r\n        onEmpty (callback) {\r\n            this.empty_callback = callback;\r\n        }\r\n    }\r\n}\r\n","namespace server{\r\n    export class Entity{\r\n        id: number;\r\n        type: any;\r\n        kind: any;\r\n        x: any;\r\n        y: any;\r\n        constructor(id:string, type, kind, x, y){\r\n            this.id = parseInt(id);\r\n            this.type = type;\r\n            this.kind = kind;\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n        \r\n        destroy () {\r\n    \r\n        }\r\n        \r\n        _getBaseState () {\r\n            return [\r\n                this.id,\r\n                this.kind,\r\n                this.x,\r\n                this.y\r\n            ];\r\n        }\r\n        \r\n        getState () {\r\n            return this._getBaseState();\r\n        }\r\n        \r\n        spawn () {\r\n            return new Messages.Spawn(this);\r\n        }\r\n        \r\n        despawn () {\r\n            return new Messages.Despawn(this.id);\r\n        }\r\n        \r\n        setPosition (x, y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n        \r\n        getPositionNextTo (entity) {\r\n            var pos = null;\r\n            if(entity) {\r\n                pos = {};\r\n                // This is a quick & dirty way to give mobs a random position\r\n                // close to another entity.\r\n                var r = Utils.random(4);\r\n                \r\n                pos.x = entity.x;\r\n                pos.y = entity.y;\r\n                if(r === 0)\r\n                    pos.y -= 1;\r\n                if(r === 1)\r\n                    pos.y += 1;\r\n                if(r === 2)\r\n                    pos.x -= 1;\r\n                if(r === 3)\r\n                    pos.x += 1;\r\n            }\r\n            return pos;\r\n        }\r\n    }\r\n}","///<reference path=\"entity.ts\"/>\r\nnamespace server{\r\n    export class Character extends Entity{\r\n        orientation: any;\r\n        attackers: {};\r\n        target: any;\r\n        maxHitPoints: any;\r\n        hitPoints: any;\r\n        constructor (id, type, kind, x, y) {\r\n            super(id, type, kind, x, y);\r\n            \r\n            this.orientation = Utils.randomOrientation();\r\n            \r\n            this.attackers = {};\r\n            this.target = null;\r\n        }\r\n        \r\n        \r\n        getState () {\r\n            var basestate = this._getBaseState(),\r\n                state = [];\r\n            \r\n            state.push(this.orientation);\r\n            if(this.target) {\r\n                state.push(this.target);\r\n            }\r\n            \r\n            return basestate.concat(state);\r\n        }\r\n        \r\n        resetHitPoints (maxHitPoints) {\r\n            this.maxHitPoints = maxHitPoints;\r\n            this.hitPoints = this.maxHitPoints;\r\n        }\r\n        \r\n        regenHealthBy (value) {\r\n            var hp = this.hitPoints,\r\n                max = this.maxHitPoints;\r\n                \r\n            if(hp < max) {\r\n                if(hp + value <= max) {\r\n                    this.hitPoints += value;\r\n                }\r\n                else {\r\n                    this.hitPoints = max;\r\n                }\r\n            }\r\n        }\r\n        \r\n        hasFullHealth () {\r\n            return this.hitPoints === this.maxHitPoints;\r\n        }\r\n        \r\n        setTarget (entity) {\r\n            this.target = entity.id;\r\n        }\r\n        /** 清除当前目标 */\r\n        clearTarget () {\r\n            this.target = null;\r\n        }\r\n        \r\n        hasTarget () {\r\n            return this.target !== null;\r\n        }\r\n        \r\n        attack () {\r\n            return new Messages.Attack(this.id, this.target);\r\n        }\r\n        \r\n        health () {\r\n            return new Messages.Health(this.hitPoints, false);\r\n        }\r\n        \r\n        regen () {\r\n            return new Messages.Health(this.hitPoints, true);\r\n        }\r\n        \r\n        addAttacker (entity) {\r\n            if(entity) {\r\n                this.attackers[entity.id] = entity;\r\n            }\r\n        }\r\n        \r\n        removeAttacker (entity) {\r\n            if(entity && entity.id in this.attackers) {\r\n                delete this.attackers[entity.id];\r\n                console.log(this.id +\" REMOVED ATTACKER \"+ entity.id)\r\n            }\r\n        }\r\n        /** 遍历攻击者 */\r\n        forEachAttacker (callback) {\r\n            for(var id in this.attackers) {\r\n                callback(this.attackers[id]);\r\n            }\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class Checkpoint {\r\n        id: any;\r\n        x: any;\r\n        y: any;\r\n        width: any;\r\n        height: any;\r\n        constructor (id, x, y, width, height) {\r\n            this.id = id;\r\n            this.x = x;\r\n            this.y = y;\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n        \r\n        getRandomPosition () {\r\n            var pos = {x:0,y:0};\r\n            \r\n            pos.x = this.x + Utils.randomInt(0, this.width - 1);\r\n            pos.y = this.y + Utils.randomInt(0, this.height - 1);\r\n            return pos;\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class Item extends Entity{\r\n        isStatic: boolean;\r\n        isFromChest: boolean;\r\n        blinkTimeout: any\r\n        despawnTimeout: any\r\n        respawn_callback: any;\r\n        constructor (id, kind, x, y) {\r\n            super(id, \"item\", kind, x, y);\r\n            this.isStatic = false;\r\n            this.isFromChest = false;\r\n        }\r\n        \r\n        handleDespawn(params) {\r\n            var self = this;\r\n            \r\n            this.blinkTimeout = setTimeout(function() {\r\n                params.blinkCallback();\r\n                self.despawnTimeout = setTimeout(params.despawnCallback, params.blinkingDuration);\r\n            }, params.beforeBlinkDelay);\r\n        }\r\n        \r\n        destroy() {\r\n            if(this.blinkTimeout) {\r\n                clearTimeout(this.blinkTimeout);\r\n            }\r\n            if(this.despawnTimeout) {\r\n                clearTimeout(this.despawnTimeout);\r\n            }\r\n            \r\n            if(this.isStatic) {\r\n                this.scheduleRespawn(30000);\r\n            }\r\n        }\r\n        \r\n        scheduleRespawn(delay) {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                if(self.respawn_callback) {\r\n                    self.respawn_callback();\r\n                }\r\n            }, delay);\r\n        }\r\n        \r\n        onRespawn(callback) {\r\n            this.respawn_callback = callback;\r\n        }\r\n    }\r\n}","///<reference path=\"item.ts\"/>\r\nnamespace server{\r\n    export class Chest extends Item{\r\n        items: any;\r\n        constructor (id, x, y) {\r\n            super(id, Types.Entities.CHEST, x, y);\r\n        }\r\n        \r\n        setItems(items) {\r\n            this.items = items;\r\n        }\r\n        \r\n        getRandomItem() {\r\n            var nbItems = _.size(this.items),\r\n                item = null;\r\n    \r\n            if(nbItems > 0) {\r\n                item = this.items[Utils.random(nbItems)];\r\n            }\r\n            return item;\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class ChestArea extends Area{\r\n        items: any;\r\n        chestX: any;\r\n        chestY: any;\r\n        constructor(id, x, y, width, height, cx, cy, items, world) {\r\n            super(id, x, y, width, height, world);\r\n            this.items = items;\r\n            this.chestX = cx;\r\n            this.chestY = cy;\r\n        }\r\n        \r\n        contains(entity) {\r\n            if(entity) {\r\n                return entity.x >= this.x\r\n                    && entity.y >= this.y\r\n                    && entity.x < this.x + this.width\r\n                    && entity.y < this.y + this.height;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class FormatChecker{\r\n        private static _inst:FormatChecker\r\n        static Inst():FormatChecker{\r\n            if(this._inst){\r\n                \r\n            }else{\r\n                this._inst = new FormatChecker()\r\n            }\r\n            return this._inst\r\n        }\r\n\r\n        formats: any[];\r\n        constructor(){\r\n            this.formats = [];\r\n            this.formats[Types.Messages.HELLO] = ['s', 'n', 'n'],\r\n            this.formats[Types.Messages.MOVE] = ['n', 'n'],\r\n            this.formats[Types.Messages.LOOTMOVE] = ['n', 'n', 'n'],\r\n            this.formats[Types.Messages.AGGRO] = ['n'],\r\n            this.formats[Types.Messages.ATTACK] = ['n'],\r\n            this.formats[Types.Messages.HIT] = ['n'],\r\n            this.formats[Types.Messages.HURT] = ['n'],\r\n            this.formats[Types.Messages.CHAT] = ['s'],\r\n            this.formats[Types.Messages.LOOT] = ['n'],\r\n            this.formats[Types.Messages.TELEPORT] = ['n', 'n'],\r\n            this.formats[Types.Messages.ZONE] = [],\r\n            this.formats[Types.Messages.OPEN] = ['n'],\r\n            this.formats[Types.Messages.CHECK] = ['n']\r\n        }\r\n\r\n        check(msg:any) {\r\n            var message = msg.slice(0),\r\n                type = message[0],\r\n                format = this.formats[type];\r\n            //shift是删除数组第一个元素\r\n            message.shift();\r\n            \r\n            if(format) {    //对比长度,来检查消息?\r\n                if(message.length !== format.length) {\r\n                    return false;\r\n                }//n代表number,s代表string\r\n                for(var i = 0, n = message.length; i < n; i += 1) {\r\n                    if(format[i] === 'n' && !_.isNumber(message[i])) {\r\n                        return false;\r\n                    }\r\n                    if(format[i] === 's' && !_.isString(message[i])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else if(type === Types.Messages.WHO) {\r\n                // WHO messages have a variable amount of params, all of which must be numbers.\r\n                return message.length > 0 && _.all(message, function(param) { return _.isNumber(param) });\r\n            }\r\n            else {\r\n                console.log(\"Unknown message type: \"+type);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 检查前端发来的消息是否符合约定好的长度与类型\r\n     * @param msg \r\n     */\r\n    export function check(msg:any):boolean{\r\n        return FormatChecker.Inst().check(msg)\r\n    }\r\n}","namespace server{\r\n    export class Formulas{\r\n        static dmg(weaponLevel, armorLevel){\r\n            var dealt = weaponLevel * Utils.randomInt(5, 10),\r\n            absorbed = armorLevel * Utils.randomInt(1, 3),\r\n            dmg =  dealt - absorbed;\r\n        \r\n            //console.log(\"abs: \"+absorbed+\"   dealt: \"+ dealt+\"   dmg: \"+ (dealt - absorbed));\r\n            if(dmg <= 0) {\r\n                return Utils.randomInt(0, 3);\r\n            } else {\r\n                return dmg;\r\n            }\r\n        }\r\n    \r\n        static hp (armorLevel) {\r\n            var hp = 80 + ((armorLevel - 1) * 30);\r\n            return hp;\r\n        }\r\n    }\r\n}","namespace server {\r\n    export class gameServer implements GameServer.IGameServer {\r\n        /**\r\n         * mode 是游戏 Server 处理客户端消息的模式。\r\n         * 可以取值为 \"sync\" 或 \"async\"。\r\n         * 当 mode 为 \"sync\" 时，游戏 Server 将使用同步模式处理客户端消息。\r\n         * 开发者在 onClientData 回调中必须显式调用 SDK.exitAction 方法，\r\n         * 游戏 Server 才能处理下一条 onClientData 广播。\r\n         * 当 mode 为 \"async\" 时，游戏 Server 将使用异步模式处理客户端消息。\r\n         * 每次监听到 onClientData 广播时都将执行回调函数。\r\n         */\r\n        public mode: 'sync' | 'async'\r\n\r\n        /**\r\n         * 世界服务器\r\n         */\r\n        public world: WorldServer\r\n\r\n        /**\r\n         * 所有玩家连接\r\n         */\r\n        public connections: { [x: string]: Connection } = {}\r\n\r\n        world_data:any\r\n        public sdk: ActionArgsSDK\r\n        public log: Array<any> = []\r\n\r\n        constructor(world_data:any) {\r\n            this.mode = 'async'\r\n            setTimeout(this.sendLog.bind(this), 10000)\r\n            this.world_data = world_data\r\n\r\n            process.on('uncaughtException', function (e: any) {\r\n                this.log.push('uncaughtException: ' + e)\r\n            })\r\n        }\r\n\r\n        sendLog() {\r\n            setTimeout(this.sendLog.bind(this), 10000)\r\n            if (this.log.length > 0 && this.sdk) {\r\n                let logdata = this.log\r\n                this.sdk.sendData({ playerIdList: [], data: { log: logdata } })\r\n                this.log = []\r\n            } else if (this.sdk) {\r\n                this.sdk.sendData('没有错误' as any)\r\n            } else {\r\n                this.log.push('没有 this.sdk 对象')\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 初始化游戏数据\r\n         */\r\n        onInitGameData(args: { room: IRoomInfo }) {\r\n            try {\r\n                let world = new WorldServer('world_1', 100)\r\n                world.run('./world_server.json')\r\n                this.world = world\r\n                return {}\r\n            } catch (error) {\r\n                this.log.push(JSON.stringify(error))\r\n                return {}\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 监听客户端发来消息\r\n         */\r\n        async onClientData(args: ActionArgs<UserDefinedData>) {\r\n            try {\r\n                this.sdk = args.SDK\r\n                //找到对应的连接,下发消息\r\n                let playId = args.sender\r\n                let connection = this.connections[playId]\r\n                if (connection) {\r\n                    if (connection.on_listen) {\r\n                        //connection.on_listen(args.actionData)\r\n                        connection.send('onClientData yes')\r\n                    } else {\r\n                        connection.send('no find connection.on_listen')\r\n                    }\r\n                } else {\r\n                    this.log.push('no find connection')\r\n                }\r\n            } catch (error) {\r\n                this.log.push(JSON.stringify(error))\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 监听加房广播\r\n         */\r\n        onJoinRoom(args: ActionArgs<IJoinRoomBst>) {\r\n            try {\r\n                //创建一条连接\r\n                let id = args.actionData.joinPlayerId\r\n                let connection = new Connection(id, args.SDK)\r\n                this.connections[id] = connection\r\n                this.world.updatePopulation()\r\n                let player = new Player(connection, this.world)\r\n                this.world.connect_callback(player)\r\n            } catch (error) {\r\n                this.log.push(JSON.stringify(error))\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 监听创建房间广播\r\n         */\r\n        onCreateRoom(args: ActionArgs<ICreateRoomBst>) {\r\n            args.SDK.logger.debug('监听创建房间广播')\r\n        }\r\n\r\n        /**\r\n         * 监听退房广播\r\n         */\r\n        onLeaveRoom(args: ActionArgs<ILeaveRoomBst>) {\r\n            args.SDK.logger.debug('监听退房广播')\r\n        }\r\n\r\n        /**\r\n         * 监听玩家被移除广播\r\n         */\r\n        onRemovePlayer(args: ActionArgs<IRemovePlayerBst>) {\r\n            args.SDK.logger.debug('监听退房广播')\r\n        }\r\n\r\n        /**\r\n         * 监听房间销毁广播\r\n         */\r\n        onDestroyRoom(args: ActionArgs<IDestroyRoomBst>) {\r\n            args.SDK.logger.debug('监听房间销毁广播')\r\n        }\r\n\r\n        /**\r\n         * 监听修改房间属性广播\r\n         */\r\n        onChangeRoom(args: ActionArgs<IChangeRoomBst>) {\r\n            args.SDK.logger.debug('监听修改房间属性广播')\r\n        }\r\n\r\n        /**\r\n         * 监听修改玩家自定义状态广播\r\n         */\r\n        onChangeCustomPlayerStatus(args: ActionArgs<IChangeCustomPlayerStatusBst>) {\r\n            args.SDK.logger.debug('监听修改玩家自定义状态广播')\r\n        }\r\n\r\n        /**\r\n         * 监听玩家网络状态变化广播\r\n         */\r\n        onChangedPlayerNetworkState(args: ActionArgs<IChangedPlayerNetworkStateBst>) {\r\n            args.SDK.logger.debug('监听修改玩家自定义状态广播')\r\n        }\r\n\r\n        /**\r\n         * 监听开始/停止帧同步广播\r\n         */\r\n        onMessageRelay(args: ActionArgs<IMessageRelayBst>) {\r\n            args.SDK.logger.debug('监听开始/停止帧同步广播')\r\n        }\r\n    }\r\n}\r\n//将 gameServer 类引用置于 exports 上\r\nvar exports: any;\r\nexports.gameServer = server.gameServer;","namespace server{\r\n    export class Types{\r\n        static Messages = {\r\n            HELLO: 0,\r\n            WELCOME: 1,\r\n            SPAWN: 2,\r\n            DESPAWN: 3,\r\n            MOVE: 4,\r\n            LOOTMOVE: 5,\r\n            AGGRO: 6,\r\n            ATTACK: 7,\r\n            HIT: 8,\r\n            HURT: 9,\r\n            HEALTH: 10,\r\n            CHAT: 11,\r\n            LOOT: 12,\r\n            EQUIP: 13,\r\n            DROP: 14,\r\n            TELEPORT: 15,\r\n            DAMAGE: 16,\r\n            POPULATION: 17,\r\n            KILL: 18,\r\n            LIST: 19,\r\n            WHO: 20,\r\n            ZONE: 21,\r\n            DESTROY: 22,\r\n            HP: 23,\r\n            BLINK: 24,\r\n            OPEN: 25,\r\n            CHECK: 26\r\n        }\r\n        \r\n        static Entities = {\r\n            WARRIOR: 1,\r\n            \r\n            // Mobs\r\n            RAT: 2,\r\n            SKELETON: 3,\r\n            GOBLIN: 4,\r\n            OGRE: 5,\r\n            SPECTRE: 6,\r\n            CRAB: 7,\r\n            BAT: 8,\r\n            WIZARD: 9,\r\n            EYE: 10,\r\n            SNAKE: 11,\r\n            SKELETON2: 12,\r\n            BOSS: 13,\r\n            DEATHKNIGHT: 14,\r\n            \r\n            // Armors\r\n            FIREFOX: 20,\r\n            CLOTHARMOR: 21,\r\n            LEATHERARMOR: 22,\r\n            MAILARMOR: 23,\r\n            PLATEARMOR: 24,\r\n            REDARMOR: 25,\r\n            GOLDENARMOR: 26,\r\n            \r\n            // Objects\r\n            FLASK: 35,\r\n            BURGER: 36,\r\n            CHEST: 37,\r\n            FIREPOTION: 38,\r\n            CAKE: 39,\r\n            \r\n            // NPCs\r\n            GUARD: 40,\r\n            KING: 41,\r\n            OCTOCAT: 42,\r\n            VILLAGEGIRL: 43,\r\n            VILLAGER: 44,\r\n            PRIEST: 45,\r\n            SCIENTIST: 46,\r\n            AGENT: 47,\r\n            RICK: 48,\r\n            NYAN: 49,\r\n            SORCERER: 50,\r\n            BEACHNPC: 51,\r\n            FORESTNPC: 52,\r\n            DESERTNPC: 53,\r\n            LAVANPC: 54,\r\n            CODER: 55,\r\n            \r\n            // Weapons\r\n            SWORD1: 60,\r\n            SWORD2: 61,\r\n            REDSWORD: 62,\r\n            GOLDENSWORD: 63,\r\n            MORNINGSTAR: 64,\r\n            AXE: 65,\r\n            BLUESWORD: 66\r\n        }\r\n        \r\n        static Orientations = {\r\n            UP: 1,\r\n            DOWN: 2,\r\n            LEFT: 3,\r\n            RIGHT: 4\r\n        }\r\n\r\n        static rankedWeapons = [\r\n            Types.Entities.SWORD1,\r\n            Types.Entities.SWORD2,\r\n            Types.Entities.AXE,\r\n            Types.Entities.MORNINGSTAR,\r\n            Types.Entities.BLUESWORD,\r\n            Types.Entities.REDSWORD,\r\n            Types.Entities.GOLDENSWORD\r\n        ]\r\n\r\n        static rankedArmors  = [21,22,23,24,25,26]\r\n\r\n        static getWeaponRank(weaponKind: any) {\r\n            return _.indexOf(Types.rankedWeapons, weaponKind);\r\n        }\r\n\r\n        static getArmorRank(armorKind: any) {\r\n            return _.indexOf(Types.rankedArmors, armorKind);\r\n        }\r\n        static isPlayer (kind: any) {\r\n            return kinds.getType(kind) === \"player\";\r\n        }\r\n        static isMob(kind: any) {\r\n            return kinds.getType(kind) === \"mob\";\r\n        }\r\n        static isNpc (kind: any) {\r\n            return kinds.getType(kind) === \"npc\";\r\n        }\r\n        static isCharacter(kind: any) {\r\n            return Types.isMob(kind) || Types.isNpc(kind) || Types.isPlayer(kind);\r\n        }\r\n        static isArmor(kind: any) {\r\n            return kinds.getType(kind) === \"armor\";\r\n        }\r\n        static isWeapon (kind: any) {\r\n            return kinds.getType(kind) === \"weapon\";\r\n        }\r\n\r\n\r\n        static isObject (kind: any) {\r\n            return kinds.getType(kind) === \"object\";\r\n        }\r\n\r\n        static isChest (kind: number) {\r\n            return kind === Types.Entities.CHEST;\r\n        }\r\n\r\n        static isItem (kind: any) {\r\n            return Types.isWeapon(kind) \r\n                || Types.isArmor(kind) \r\n                || (Types.isObject(kind) && !Types.isChest(kind));\r\n        }\r\n\r\n        static isHealingItem (kind: number) {\r\n            return kind === Types.Entities.FLASK \r\n                || kind === Types.Entities.BURGER;\r\n        }\r\n\r\n        static isExpendableItem(kind: number) {\r\n            return Types.isHealingItem(kind)\r\n                || kind === Types.Entities.FIREPOTION\r\n                || kind === Types.Entities.CAKE;\r\n        }\r\n\r\n        static getKindFromString (kind: string) {\r\n            if(kind in kinds) {\r\n                return kinds[kind][0];\r\n            }\r\n        }\r\n\r\n        static getKindAsString (kind: any) {\r\n            for(var k in kinds) {\r\n                if(kinds[k][0] === kind) {\r\n                    return k;\r\n                }\r\n            }\r\n        }\r\n\r\n        static forEachKind (callback: { (kind: any, kindName: any): void; (kind: any, kindName: any): void; (kind: any, kindName: any): void; (arg0: any, arg1: string): void; }) {\r\n            for(var k in kinds) {\r\n                callback(kinds[k][0], k);\r\n            }\r\n        }\r\n\r\n        static forEachArmor(callback: (arg0: any, arg1: any) => void) {\r\n            Types.forEachKind(function(kind: any, kindName: any) {\r\n                if(Types.isArmor(kind)) {\r\n                    callback(kind, kindName);\r\n                }\r\n            });\r\n        }\r\n\r\n        static forEachMobOrNpcKind (callback: (arg0: any, arg1: any) => void) {\r\n            Types.forEachKind(function(kind: any, kindName: any) {\r\n                if(Types.isMob(kind) || Types.isNpc(kind)) {\r\n                    callback(kind, kindName);\r\n                }\r\n            });\r\n        }\r\n\r\n        static forEachArmorKind(callback: (arg0: any, arg1: any) => void) {\r\n            Types.forEachKind(function(kind: any, kindName: any) {\r\n                if(Types.isArmor(kind)) {\r\n                    callback(kind, kindName);\r\n                }\r\n            });\r\n        }\r\n\r\n        static getOrientationAsString(orientation: any) {\r\n            switch(orientation) {\r\n                case Types.Orientations.LEFT: return \"left\"; break;\r\n                case Types.Orientations.RIGHT: return \"right\"; break;\r\n                case Types.Orientations.UP: return \"up\"; break;\r\n                case Types.Orientations.DOWN: return \"down\"; break;\r\n            }\r\n        }\r\n\r\n        static getRandomItemKind(item: any) {\r\n            var all = _.union(this.rankedWeapons, this.rankedArmors),\r\n                forbidden = [Types.Entities.SWORD1, Types.Entities.CLOTHARMOR],\r\n                itemKinds = _.difference(all, forbidden),\r\n                i = Math.floor(Math.random() * _.size(itemKinds));\r\n            \r\n            return itemKinds[i];\r\n        }\r\n\r\n        static getMessageTypeAsString(type: any) {\r\n            var typeName: string;\r\n            _.each(Types.Messages, function(value: any, name: any) {\r\n                if(value === type) {\r\n                    typeName = name;\r\n                }\r\n            });\r\n            if(!typeName) {\r\n                typeName = \"UNKNOWN\";\r\n            }\r\n            return typeName;\r\n        }\r\n    }\r\n\r\n    var kinds = {\r\n        warrior: [Types.Entities.WARRIOR, \"player\"],\r\n        \r\n        rat: [Types.Entities.RAT, \"mob\"],\r\n        skeleton: [Types.Entities.SKELETON , \"mob\"],\r\n        goblin: [Types.Entities.GOBLIN, \"mob\"],\r\n        ogre: [Types.Entities.OGRE, \"mob\"],\r\n        spectre: [Types.Entities.SPECTRE, \"mob\"],\r\n        deathknight: [Types.Entities.DEATHKNIGHT, \"mob\"],\r\n        crab: [Types.Entities.CRAB, \"mob\"],\r\n        snake: [Types.Entities.SNAKE, \"mob\"],\r\n        bat: [Types.Entities.BAT, \"mob\"],\r\n        wizard: [Types.Entities.WIZARD, \"mob\"],\r\n        eye: [Types.Entities.EYE, \"mob\"],\r\n        skeleton2: [Types.Entities.SKELETON2, \"mob\"],\r\n        boss: [Types.Entities.BOSS, \"mob\"],\r\n\r\n        sword1: [Types.Entities.SWORD1, \"weapon\"],\r\n        sword2: [Types.Entities.SWORD2, \"weapon\"],\r\n        axe: [Types.Entities.AXE, \"weapon\"],\r\n        redsword: [Types.Entities.REDSWORD, \"weapon\"],\r\n        bluesword: [Types.Entities.BLUESWORD, \"weapon\"],\r\n        goldensword: [Types.Entities.GOLDENSWORD, \"weapon\"],\r\n        morningstar: [Types.Entities.MORNINGSTAR, \"weapon\"],\r\n        \r\n        firefox: [Types.Entities.FIREFOX, \"armor\"],\r\n        clotharmor: [Types.Entities.CLOTHARMOR, \"armor\"],\r\n        leatherarmor: [Types.Entities.LEATHERARMOR, \"armor\"],\r\n        mailarmor: [Types.Entities.MAILARMOR, \"armor\"],\r\n        platearmor: [Types.Entities.PLATEARMOR, \"armor\"],\r\n        redarmor: [Types.Entities.REDARMOR, \"armor\"],\r\n        goldenarmor: [Types.Entities.GOLDENARMOR, \"armor\"],\r\n\r\n        flask: [Types.Entities.FLASK, \"object\"],\r\n        cake: [Types.Entities.CAKE, \"object\"],\r\n        burger: [Types.Entities.BURGER, \"object\"],\r\n        chest: [Types.Entities.CHEST, \"object\"],\r\n        firepotion: [Types.Entities.FIREPOTION, \"object\"],\r\n\r\n        guard: [Types.Entities.GUARD, \"npc\"],\r\n        villagegirl: [Types.Entities.VILLAGEGIRL, \"npc\"],\r\n        villager: [Types.Entities.VILLAGER, \"npc\"],\r\n        coder: [Types.Entities.CODER, \"npc\"],\r\n        scientist: [Types.Entities.SCIENTIST, \"npc\"],\r\n        priest: [Types.Entities.PRIEST, \"npc\"],\r\n        king: [Types.Entities.KING, \"npc\"],\r\n        rick: [Types.Entities.RICK, \"npc\"],\r\n        nyan: [Types.Entities.NYAN, \"npc\"],\r\n        sorcerer: [Types.Entities.SORCERER, \"npc\"],\r\n        agent: [Types.Entities.AGENT, \"npc\"],\r\n        octocat: [Types.Entities.OCTOCAT, \"npc\"],\r\n        beachnpc: [Types.Entities.BEACHNPC, \"npc\"],\r\n        forestnpc: [Types.Entities.FORESTNPC, \"npc\"],\r\n        desertnpc: [Types.Entities.DESERTNPC, \"npc\"],\r\n        lavanpc: [Types.Entities.LAVANPC, \"npc\"],\r\n        \r\n        getType: function(kind:any):string {\r\n            return kinds[Types.getKindAsString(kind)][1];\r\n        }\r\n    }\r\n}","namespace server {\r\n    export class Map {\r\n        isLoaded: boolean;\r\n        width: any;\r\n        height: any;\r\n        collisions: Array<number>\r\n        mobAreas: any;\r\n        chestAreas: any;\r\n        staticChests: any;\r\n        staticEntities: any;\r\n        zoneWidth: number;\r\n        zoneHeight: number;\r\n        groupWidth: number;\r\n        groupHeight: number;\r\n        ready_func: any;\r\n        grid: any[];\r\n        connectedGroups: any;\r\n        checkpoints: {};\r\n        startingAreas: Array<Checkpoint>\r\n        constructor(filepath) {\r\n            //var filepath = filepath || \"./world_server.json\"\r\n            var self = this;\r\n\r\n            this.isLoaded = false;\r\n\r\n            // if(fs.lstatSync(filepath).isFile() ) {\r\n            //     fs.readFile(filepath, function(err, file) {\r\n            var json = filepath//JSON.parse(file.toString());\r\n\r\n            self.initMap(json);\r\n            //     });\r\n            // }\r\n            // else\r\n            // {\r\n            //     console.log(filepath + \" 地图文件是不存在的\");\r\n            // }\r\n        }\r\n\r\n        initMap(map) {\r\n            this.width = map.width;\r\n            this.height = map.height;\r\n            this.collisions = map.collisions;\r\n            this.mobAreas = map.roamingAreas;\r\n            this.chestAreas = map.chestAreas;\r\n            this.staticChests = map.staticChests;\r\n            this.staticEntities = map.staticEntities;\r\n            this.isLoaded = true;\r\n\r\n            // zone groups\r\n            this.zoneWidth = 28;\r\n            this.zoneHeight = 12;\r\n            this.groupWidth = Math.floor(this.width / this.zoneWidth);\r\n            this.groupHeight = Math.floor(this.height / this.zoneHeight);\r\n\r\n            this.initConnectedGroups(map.doors);\r\n            this.initCheckpoints(map.checkpoints);\r\n\r\n            if (this.ready_func) {\r\n                this.ready_func();\r\n            }\r\n        }\r\n\r\n        ready(f) {\r\n            this.ready_func = f;\r\n        }\r\n\r\n        tileIndexToGridPosition(tileNum) {\r\n            var x = 0,\r\n                y = 0;\r\n\r\n            var getX = function (num, w) {\r\n                if (num == 0) {\r\n                    return 0;\r\n                }\r\n                return (num % w == 0) ? w - 1 : (num % w) - 1;\r\n            }\r\n\r\n            tileNum -= 1;\r\n            x = getX(tileNum + 1, this.width);\r\n            y = Math.floor(tileNum / this.width);\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        GridPositionToTileIndex(x, y) {\r\n            return (y * this.width) + x + 1;\r\n        }\r\n\r\n        generateCollisionGrid() {\r\n            this.grid = [];\r\n\r\n            if (this.isLoaded) {\r\n                var tileIndex = 0;\r\n                for (var j, i = 0; i < this.height; i++) {\r\n                    this.grid[i] = [];\r\n                    for (j = 0; j < this.width; j++) {\r\n                        if (_.include(this.collisions, tileIndex)) {\r\n                            this.grid[i][j] = 1;\r\n                        } else {\r\n                            this.grid[i][j] = 0;\r\n                        }\r\n                        tileIndex += 1;\r\n                    }\r\n                }\r\n                //console.log(\"生成碰撞网格。\");\r\n            }\r\n        }\r\n\r\n        isOutOfBounds(x, y) {\r\n            return x <= 0 || x >= this.width || y <= 0 || y >= this.height;\r\n        }\r\n\r\n        isColliding(x, y) {\r\n            if (this.isOutOfBounds(x, y)) {\r\n                return false;\r\n            }\r\n            return this.grid[y][x] === 1;\r\n        }\r\n\r\n        GroupIdToGroupPosition(id) {\r\n            var posArray = id.split('-');\r\n\r\n            return pos(parseInt(posArray[0]), parseInt(posArray[1]));\r\n        }\r\n\r\n        forEachGroup(callback) {\r\n            var width = this.groupWidth,\r\n                height = this.groupHeight;\r\n\r\n            for (var x = 0; x < width; x += 1) {\r\n                for (var y = 0; y < height; y += 1) {\r\n                    callback(x + '-' + y);\r\n                }\r\n            }\r\n        }\r\n\r\n        getGroupIdFromPosition(x, y) {\r\n            var w = this.zoneWidth,\r\n                h = this.zoneHeight,\r\n                gx = Math.floor((x - 1) / w),\r\n                gy = Math.floor((y - 1) / h);\r\n\r\n            return gx + '-' + gy;\r\n        }\r\n        /** 获取相邻的组位置 */\r\n        getAdjacentGroupPositions(id) {\r\n            var self = this,\r\n                position = this.GroupIdToGroupPosition(id),\r\n                x = position.x,\r\n                y = position.y,\r\n                // surrounding groups\r\n                list = [pos(x - 1, y - 1), pos(x, y - 1), pos(x + 1, y - 1),\r\n                pos(x - 1, y), pos(x, y), pos(x + 1, y),\r\n                pos(x - 1, y + 1), pos(x, y + 1), pos(x + 1, y + 1)];\r\n\r\n            // groups connected via doors\r\n            _.each(this.connectedGroups[id], function (position) {\r\n                // don't add a connected group if it's already part of the surrounding ones.\r\n                if (!_.any(list, function (groupPos) { return equalPositions(groupPos, position); })) {\r\n                    list.push(position);\r\n                }\r\n            });\r\n\r\n            return _.reject(list, function (pos) {\r\n                return pos.x < 0 || pos.y < 0 || pos.x >= self.groupWidth || pos.y >= self.groupHeight;\r\n            });\r\n        }\r\n        /** 循环相邻的组 */\r\n        forEachAdjacentGroup(groupId, callback) {\r\n            if (groupId) {\r\n                _.each(this.getAdjacentGroupPositions(groupId), function (pos) {\r\n                    callback(pos.x + '-' + pos.y);\r\n                });\r\n            }\r\n        }\r\n\r\n        initConnectedGroups(doors) {\r\n            var self = this;\r\n\r\n            this.connectedGroups = {};\r\n            _.each(doors, function (door) {\r\n                var groupId = self.getGroupIdFromPosition(door.x, door.y),\r\n                    connectedGroupId = self.getGroupIdFromPosition(door.tx, door.ty),\r\n                    connectedPosition = self.GroupIdToGroupPosition(connectedGroupId);\r\n\r\n                if (groupId in self.connectedGroups) {\r\n                    self.connectedGroups[groupId].push(connectedPosition);\r\n                } else {\r\n                    self.connectedGroups[groupId] = [connectedPosition];\r\n                }\r\n            });\r\n        }\r\n\r\n        initCheckpoints(cpList) {\r\n            var self = this;\r\n\r\n            this.checkpoints = {};\r\n            this.startingAreas = new Array<Checkpoint>()\r\n\r\n            _.each(cpList, function (cp) {\r\n                var checkpoint = new Checkpoint(cp.id, cp.x, cp.y, cp.w, cp.h);\r\n                self.checkpoints[checkpoint.id] = checkpoint;\r\n                if (cp.s === 1) {\r\n                    self.startingAreas.push(checkpoint);\r\n                }\r\n            });\r\n        }\r\n\r\n        getCheckpoint(id) {\r\n            return this.checkpoints[id];\r\n        }\r\n\r\n        getRandomStartingPosition() {\r\n            let nbAreas = this.startingAreas.length\r\n            let i = Utils.randomInt(0, nbAreas - 1);\r\n            let area = this.startingAreas[i];\r\n\r\n            return area.getRandomPosition();\r\n        }\r\n    }\r\n\r\n    var pos = function (x, y) {\r\n        return { x: x, y: y };\r\n    }\r\n\r\n    var equalPositions = function (pos1, pos2) {\r\n        return pos1.x === pos2.x && pos2.y === pos2.y;\r\n    }\r\n\r\n}","namespace server {\r\n    export namespace Messages {\r\n        class Message { }\r\n        export class Spawn extends Message {\r\n            entity: any;\r\n            constructor(entity) {\r\n                super()\r\n                this.entity = entity;\r\n            }\r\n            serialize() {\r\n\r\n                var spawn = [Types.Messages.SPAWN];\r\n                return spawn.concat(this.entity.getState());\r\n            }\r\n        }\r\n\r\n        export class Despawn extends Message {\r\n            entityId: any;\r\n            constructor(entityId) {\r\n                super()\r\n                this.entityId = entityId;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.DESPAWN, this.entityId];\r\n            }\r\n        }\r\n\r\n        export class Move extends Message {\r\n            entity: any;\r\n            constructor(entity) {\r\n                super()\r\n                this.entity = entity;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.MOVE,\r\n                this.entity.id,\r\n                this.entity.x,\r\n                this.entity.y];\r\n            }\r\n        }\r\n\r\n        export class LootMove extends Message {\r\n            item: any;\r\n            entity: any;\r\n            constructor(entity, item) {\r\n                super()\r\n                this.entity = entity;\r\n                this.item = item;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.LOOTMOVE,\r\n                this.entity.id,\r\n                this.item.id];\r\n            }\r\n        }\r\n\r\n        export class Attack extends Message {\r\n            targetId: any;\r\n            attackerId: any;\r\n            constructor(attackerId, targetId) {\r\n                super()\r\n                this.attackerId = attackerId;\r\n                this.targetId = targetId;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.ATTACK,\r\n                this.attackerId,\r\n                this.targetId];\r\n            }\r\n        }\r\n\r\n        export class Health extends Message {\r\n            isRegen: any;\r\n            points: any;\r\n            constructor(points, isRegen) {\r\n                super()\r\n                this.points = points;\r\n                this.isRegen = isRegen;\r\n            }\r\n            serialize() {\r\n                var health = [Types.Messages.HEALTH,\r\n                this.points];\r\n\r\n                if (this.isRegen) {\r\n                    health.push(1);\r\n                }\r\n                return health;\r\n            }\r\n        }\r\n\r\n        export class HitPoints extends Message {\r\n            maxHitPoints: any;\r\n            constructor(maxHitPoints) {\r\n                super()\r\n                this.maxHitPoints = maxHitPoints;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.HP,\r\n                this.maxHitPoints];\r\n            }\r\n        }\r\n\r\n        export class EquipItem extends Message {\r\n            playerId: any;\r\n            itemKind: any;\r\n            constructor(player, itemKind) {\r\n                super()\r\n                this.playerId = player.id;\r\n                this.itemKind = itemKind;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.EQUIP,\r\n                this.playerId,\r\n                this.itemKind];\r\n            }\r\n        }\r\n\r\n        export class Drop extends Message {\r\n            mob: any;\r\n            item: any;\r\n            constructor(mob, item) {\r\n                super()\r\n                this.mob = mob;\r\n                this.item = item;\r\n            }\r\n            serialize() {\r\n                var drop = [Types.Messages.DROP,\r\n                this.mob.id,\r\n                this.item.id,\r\n                this.item.kind,\r\n                _.pluck(this.mob.hatelist, \"id\")];\r\n\r\n                return drop;\r\n            }\r\n        }\r\n\r\n        export class Chat extends Message {\r\n            message: any;\r\n            playerId: any;\r\n            constructor(player, message) {\r\n                super()\r\n                this.playerId = player.id;\r\n                this.message = message;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.CHAT,\r\n                this.playerId,\r\n                this.message];\r\n            }\r\n        }\r\n\r\n        export class Teleport extends Message {\r\n            entity: any;\r\n            constructor(entity) {\r\n                super()\r\n                this.entity = entity;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.TELEPORT,\r\n                this.entity.id,\r\n                this.entity.x,\r\n                this.entity.y];\r\n            }\r\n        }\r\n\r\n        export class Damage extends Message {\r\n            points: any;\r\n            entity: any;\r\n            constructor(entity, points) {\r\n                super()\r\n                this.entity = entity;\r\n                this.points = points;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.DAMAGE,\r\n                this.entity.id,\r\n                this.points];\r\n            }\r\n        }\r\n\r\n        export class Population extends Message {\r\n            world: any;\r\n            total: any;\r\n            constructor(world, total) {\r\n                super()\r\n                this.world = world;\r\n                this.total = total;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.POPULATION,\r\n                this.world,\r\n                this.total];\r\n            }\r\n        }\r\n\r\n        export class Kill extends Message {\r\n            mob: any;\r\n            constructor(mob) {\r\n                super()\r\n                this.mob = mob;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.KILL,\r\n                this.mob.kind];\r\n            }\r\n        }\r\n\r\n        export class List extends Message {\r\n            ids: any;\r\n            constructor(ids) {\r\n                super()\r\n                this.ids = ids;\r\n            }\r\n            serialize() {\r\n                var list = this.ids;\r\n\r\n                list.unshift(Types.Messages.LIST);\r\n                return list;\r\n            }\r\n        }\r\n\r\n        export class Destroy extends Message {\r\n            entity: any;\r\n            constructor(entity) {\r\n                super()\r\n                this.entity = entity;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.DESTROY,\r\n                this.entity.id];\r\n            }\r\n        }\r\n\r\n        export class Blink extends Message {\r\n            item: any;\r\n            constructor(item) {\r\n                super()\r\n                this.item = item;\r\n            }\r\n            serialize() {\r\n                return [Types.Messages.BLINK,\r\n                this.item.id];\r\n            }\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class Mob extends Character{\r\n        spawningX: any;\r\n        spawningY: any;\r\n        armorLevel: any;\r\n        weaponLevel: any;\r\n        hatelist: any[];\r\n        respawnTimeout: any;\r\n        returnTimeout: any;\r\n        isDead: boolean;\r\n        area: any;\r\n        respawn_callback: any;\r\n        move_callback: any;\r\n        constructor(id, kind, x, y) {\r\n            super(id, \"mob\", kind, x, y);\r\n            \r\n            this.updateHitPoints();\r\n            this.spawningX = x;\r\n            this.spawningY = y;\r\n            this.armorLevel = Properties.getArmorLevel(this.kind);\r\n            this.weaponLevel = Properties.getWeaponLevel(this.kind);\r\n            this.hatelist = [];\r\n            this.respawnTimeout = null;\r\n            this.returnTimeout = null;\r\n            this.isDead = false;\r\n        }\r\n        \r\n        destroy () {\r\n            this.isDead = true;\r\n            this.hatelist = [];\r\n            this.clearTarget();\r\n            this.updateHitPoints();\r\n            this.resetPosition();\r\n            \r\n            this.handleRespawn();\r\n        }\r\n        \r\n        receiveDamage (points, playerId) {\r\n            this.hitPoints -= points;\r\n        }\r\n        \r\n        hates (playerId) {\r\n            return _.any(this.hatelist, function(obj) { \r\n                return obj.id === playerId; \r\n            });\r\n        }\r\n        \r\n        increaseHateFor (playerId, points) {\r\n            if(this.hates(playerId)) {\r\n                _.detect(this.hatelist, function(obj) {\r\n                    return obj.id === playerId;\r\n                }).hate += points;\r\n            }\r\n            else {\r\n                this.hatelist.push({ id: playerId, hate: points });\r\n            }\r\n    \r\n            /*\r\n            log.debug(\"Hatelist : \"+this.id);\r\n            _.each(this.hatelist, function(obj) {\r\n                log.debug(obj.id + \" -> \" + obj.hate);\r\n            });*/\r\n            \r\n            if(this.returnTimeout) {\r\n                // Prevent the mob from returning to its spawning position\r\n                // since it has aggroed a new player\r\n                clearTimeout(this.returnTimeout);\r\n                this.returnTimeout = null;\r\n            }\r\n        }\r\n        \r\n        getHatedPlayerId (hateRank) {\r\n            var i, playerId,\r\n                sorted = _.sortBy(this.hatelist, function(obj) { return obj.hate; }),\r\n                size = _.size(this.hatelist);\r\n            \r\n            if(hateRank && hateRank <= size) {\r\n                i = size - hateRank;\r\n            }\r\n            else {\r\n                i = size - 1;\r\n            }\r\n            if(sorted && sorted[i]) {\r\n                playerId = sorted[i].id;\r\n            }\r\n            \r\n            return playerId;\r\n        }\r\n        \r\n        forgetPlayer (playerId, duration) {\r\n            this.hatelist = _.reject(this.hatelist, function(obj) { return obj.id === playerId; });\r\n            \r\n            if(this.hatelist.length === 0) {\r\n                this.returnToSpawningPosition(duration);\r\n            }\r\n        }\r\n        \r\n        forgetEveryone () {\r\n            this.hatelist = [];\r\n            this.returnToSpawningPosition(1);\r\n        }\r\n        \r\n        drop (item) {\r\n            if(item) {\r\n                return new Messages.Drop(this, item);\r\n            }\r\n        }\r\n        \r\n        handleRespawn () {\r\n            var delay = 30000,\r\n                self = this;\r\n    \r\n            if(this.area && this.area instanceof MobArea) {\r\n                // Respawn inside the area if part of a MobArea\r\n                this.area.respawnMob(this, delay);\r\n            }\r\n            else {\r\n                if(this.area && this.area instanceof ChestArea) {\r\n                    this.area.removeFromArea(this);\r\n                }\r\n                \r\n                setTimeout(function() {\r\n                    if(self.respawn_callback) {\r\n                        self.respawn_callback();\r\n                    }\r\n                } , delay);\r\n            }\r\n        }\r\n        \r\n        onRespawn (callback) {\r\n            this.respawn_callback = callback;\r\n        }\r\n        \r\n        resetPosition () {\r\n            this.setPosition(this.spawningX, this.spawningY);\r\n        }\r\n        \r\n        returnToSpawningPosition (waitDuration) {\r\n            var self = this,\r\n                delay = waitDuration || 4000;\r\n            \r\n            this.clearTarget();\r\n            \r\n            this.returnTimeout = setTimeout(function() {\r\n                self.resetPosition();\r\n                self.move(self.x, self.y);\r\n            } , delay);\r\n        }\r\n        \r\n        onMove (callback) {\r\n            this.move_callback = callback;\r\n        }\r\n        \r\n        move (x, y) {\r\n            this.setPosition(x, y);\r\n            if(this.move_callback) {\r\n                this.move_callback(this);\r\n            }\r\n        }\r\n        \r\n        updateHitPoints () {\r\n            this.resetHitPoints(Properties.getHitPoints(this.kind));\r\n        }\r\n        \r\n        distanceToSpawningPoint (x, y) {\r\n            return Utils.distanceTo(x, y, this.spawningX, this.spawningY);\r\n        }\r\n    }\r\n    \r\n}","namespace server{\r\n    export class MobArea extends Area{\r\n        nb: number;\r\n        kind: any;\r\n        respawns: any[];\r\n        isDead: boolean;\r\n        \r\n        constructor(id: any, nb: any, kind: any, x: any, y: any, width: any, height: any, world: any) {\r\n            super(id, x, y, width, height, world);\r\n            this.nb = nb;\r\n            this.kind = kind;\r\n            this.respawns = [];\r\n            this.setNumberOfEntities(this.nb);\r\n            \r\n            //this.initRoaming();\r\n        }\r\n        \r\n        spawnMobs() {\r\n            for(var i = 0; i < this.nb; i += 1) {\r\n                this.addToArea(this._createMobInsideArea());\r\n            }\r\n        }\r\n        \r\n        _createMobInsideArea() {\r\n            var k = Types.getKindFromString(this.kind),\r\n                pos = this._getRandomPositionInsideArea(),\r\n                mob = new Mob('1' + this.id + ''+ k + ''+ this.entities.length, k, pos.x, pos.y);\r\n            \r\n            mob.onMove(this.world.onMobMoveCallback.bind(this.world));\r\n\r\n            return mob;\r\n        }\r\n        \r\n        respawnMob(mob: Mob, delay: number) {\r\n            var self = this;\r\n            \r\n            this.removeFromArea(mob);\r\n            \r\n            setTimeout(function() {\r\n                var pos = self._getRandomPositionInsideArea();\r\n                \r\n                mob.x = pos.x;\r\n                mob.y = pos.y;\r\n                mob.isDead = false;\r\n                self.addToArea(mob);\r\n                self.world.addMob(mob);\r\n            }, delay);\r\n        }\r\n\r\n        initRoaming(mob: any) {\r\n            var self = this;\r\n            \r\n            setInterval(function() {\r\n                // _.each(self.entities, function(mob) {\r\n                //     var canRoam = (random(20) === 1),\r\n                //         pos: { x: any; y: any; };\r\n                    \r\n                //     if(canRoam) {\r\n                //         if(!mob.hasTarget() && !mob.isDead) {\r\n                //             pos = self._getRandomPositionInsideArea();\r\n                //             mob.move(pos.x, pos.y);\r\n                //         }\r\n                //     }\r\n                // });\r\n            }, 500);\r\n        }\r\n        \r\n        createReward() {\r\n            var pos = this._getRandomPositionInsideArea();\r\n            \r\n            return { x: pos.x, y: pos.y, kind: Types.Entities.CHEST };\r\n        }\r\n    }\r\n\r\n}","namespace server{\r\n    export class Npc extends Entity{\r\n        constructor(id, kind, x, y) {\r\n            super(id, \"npc\", kind, x, y);\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class Player extends Character{\r\n        group:string\r\n        server: WorldServer;\r\n        connection: Connection;\r\n        hasEnteredGame: boolean;\r\n        isDead: boolean;\r\n        haters: {};\r\n        lastCheckpoint: any;\r\n        formatChecker: any;\r\n        disconnectTimeout: any;\r\n        name: any;\r\n        zone_callback(): any {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        move_callback: any;\r\n        lootmove_callback: any;\r\n        weaponLevel(weaponLevel: any, armorLevel: any): any {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        armorLevel(weaponLevel: any, armorLevel: any): any {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        firepotionTimeout: any;\r\n        armor(armor: any): any {\r\n            throw new Error(\"Method not implemented.\");\r\n        }\r\n        message_callback: any;\r\n        exit_callback: any;\r\n        weapon: any;\r\n        broadcast_callback: any;\r\n        broadcastzone_callback: any;\r\n        orient_callback: any;\r\n        requestpos_callback: any;\r\n        \r\n        /**\r\n         * \r\n         * @param connection 与玩家的连接\r\n         * @param worldServer 玩家所在的世界服务器\r\n         */\r\n        constructor (connection:Connection, worldServer:WorldServer) {\r\n            super(connection.id, \"player\", Types.Entities.WARRIOR, 0, 0);\r\n            var self = this;\r\n            \r\n            this.server = worldServer;\r\n            this.connection = connection;\r\n    \r\n            \r\n    \r\n            this.hasEnteredGame = false;\r\n            this.isDead = false;\r\n            this.haters = {};\r\n            this.lastCheckpoint = null;\r\n            this.formatChecker = new FormatChecker();\r\n            this.disconnectTimeout = null;\r\n            \r\n            this.connection.listen(function(message) {\r\n    \r\n                var action = parseInt(message[0]);\r\n                \r\n                console.log(\"收到客户端消息: \" + message);\r\n                if(!check(message)) {\r\n                    self.connection.close(\"无效 \"+Types.getMessageTypeAsString(action)+\" message format: \"+message);\r\n                    return;\r\n                }\r\n                \r\n                // HELLO 必须是是第一条信息\r\n                if(!self.hasEnteredGame && action !== Types.Messages.HELLO) { \r\n                    self.connection.close(\"无效的握手消息: \"+message);\r\n                    return;\r\n                }\r\n\r\n                // HELLO 只能发送一次\r\n                if(self.hasEnteredGame && !self.isDead && action === Types.Messages.HELLO) { \r\n                    self.connection.close(\"无法启动两次握手: \"+message);\r\n                    return;\r\n                }\r\n                \r\n                self.resetTimeout();\r\n                \r\n                if(action === Types.Messages.HELLO) {\r\n                    var name = Utils.sanitize(message[1]);\r\n                    \r\n                    // If name was cleared by the sanitizer, give a default name.\r\n                    // Always ensure that the name is not longer than a maximum length.\r\n                    // (also enforced by the maxlength attribute of the name input element).\r\n                    self.name = (name === \"\") ? \"lorem ipsum\" : name.substr(0, 15);\r\n                    \r\n                    self.kind = Types.Entities.WARRIOR;\r\n                    self.equipArmor(message[2]);\r\n                    self.equipWeapon(message[3]);\r\n                    self.orientation = Utils.randomOrientation();\r\n                    self.updateHitPoints();\r\n                    self.updatePosition();\r\n                    \r\n                    self.server.addPlayer(self);\r\n                    self.server.enter_callback(self);\r\n    \r\n                    self.send([Types.Messages.WELCOME, self.id, self.name, self.x, self.y, self.hitPoints]);\r\n                    self.hasEnteredGame = true;\r\n                    self.isDead = false;\r\n                }\r\n                else if(action === Types.Messages.WHO) {\r\n                    message.shift();\r\n                    self.server.pushSpawnsToPlayer(self, message);\r\n                }\r\n                else if(action === Types.Messages.ZONE) {\r\n                    self.zone_callback();\r\n                }\r\n                else if(action === Types.Messages.CHAT) {\r\n                    var msg = Utils.sanitize(message[1]);\r\n                    \r\n                    // Sanitized messages may become empty. No need to broadcast empty chat messages.\r\n                    if(msg && msg !== \"\") {\r\n                        msg = msg.substr(0, 60); // Enforce maxlength of chat input\r\n                        self.broadcastToZone(new Messages.Chat(self, msg), false);\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.MOVE) {\r\n                    if(self.move_callback) {\r\n                        var x = message[1],\r\n                            y = message[2];\r\n                        \r\n                        if(self.server.isValidPosition(x, y)) {\r\n                            self.setPosition(x, y);\r\n                            self.clearTarget();\r\n                            \r\n                            self.broadcast(new Messages.Move(self));\r\n                            self.move_callback(self.x, self.y);\r\n                        }\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.LOOTMOVE) {\r\n                    if(self.lootmove_callback) {\r\n                        self.setPosition(message[1], message[2]);\r\n                        \r\n                        var item = self.server.getEntityById(message[3]);\r\n                        if(item) {\r\n                            self.clearTarget();\r\n    \r\n                            self.broadcast(new Messages.LootMove(self, item));\r\n                            self.lootmove_callback(self.x, self.y);\r\n                        }\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.AGGRO) {\r\n                    if(self.move_callback) {\r\n                        self.server.handleMobHate(message[1], self.id, 5);\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.ATTACK) {\r\n                    var mob = self.server.getEntityById(message[1]);\r\n                    \r\n                    if(mob) {\r\n                        self.setTarget(mob);\r\n                        self.server.broadcastAttacker(self);\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.HIT) {\r\n                    var mob = self.server.getEntityById(message[1]);\r\n    \r\n                    if(mob) {\r\n                        var dmg = Formulas.dmg(self.weaponLevel, mob.armorLevel);\r\n                        \r\n                        if(dmg > 0) {\r\n                            mob.receiveDamage(dmg, self.id);\r\n                            self.server.handleMobHate(mob.id, self.id, dmg);\r\n                            self.server.handleHurtEntity(mob, self, dmg);\r\n                        }\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.HURT) {\r\n                    var mob = self.server.getEntityById(message[1]);\r\n                    if(mob && self.hitPoints > 0) {\r\n                        self.hitPoints -= Formulas.dmg(mob.weaponLevel, self.armorLevel);\r\n                        self.server.handleHurtEntity(self, mob);\r\n                        \r\n                        if(self.hitPoints <= 0) {\r\n                            self.isDead = true;\r\n                            if(self.firepotionTimeout) {\r\n                                clearTimeout(self.firepotionTimeout);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.LOOT) {\r\n                    var item = self.server.getEntityById(message[1]);\r\n                    \r\n                    if(item) {\r\n                        var kind = item.kind;\r\n                        \r\n                        if(Types.isItem(kind)) {\r\n                            self.broadcast(item.despawn());\r\n                            self.server.removeEntity(item);\r\n                            \r\n                            if(kind === Types.Entities.FIREPOTION) {\r\n                                self.updateHitPoints();\r\n                                self.broadcast(self.equip(Types.Entities.FIREFOX));\r\n                                self.firepotionTimeout = setTimeout(function() {\r\n                                    self.broadcast(self.equip(self.armor)); // return to normal after 15 sec\r\n                                    self.firepotionTimeout = null;\r\n                                } , 15000);\r\n                                self.send(new Messages.HitPoints(self.maxHitPoints).serialize());\r\n                            } else if(Types.isHealingItem(kind)) {\r\n                                var amount;\r\n                                \r\n                                switch(kind) {\r\n                                    case Types.Entities.FLASK: \r\n                                        amount = 40;\r\n                                        break;\r\n                                    case Types.Entities.BURGER: \r\n                                        amount = 100;\r\n                                        break;\r\n                                }\r\n                                \r\n                                if(!self.hasFullHealth()) {\r\n                                    self.regenHealthBy(amount);\r\n                                    self.server.pushToPlayer(self, self.health());\r\n                                }\r\n                            } else if(Types.isArmor(kind) || Types.isWeapon(kind)) {\r\n                                self.equipItem(item);\r\n                                self.broadcast(self.equip(kind));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.TELEPORT) {\r\n                    var x = message[1],\r\n                        y = message[2];\r\n                    \r\n                    if(self.server.isValidPosition(x, y)) {\r\n                        self.setPosition(x, y);\r\n                        self.clearTarget();\r\n                        \r\n                        self.broadcast(new Messages.Teleport(self));\r\n                        \r\n                        self.server.handlePlayerVanish(self);\r\n                        self.server.pushRelevantEntityListTo(self);\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.OPEN) {\r\n                    var chest = self.server.getEntityById(message[1]);\r\n                    if(chest && chest instanceof Chest) {\r\n                        self.server.handleOpenedChest(chest, self);\r\n                    }\r\n                }\r\n                else if(action === Types.Messages.CHECK) {\r\n                    var checkpoint = self.server.map.getCheckpoint(message[1]);\r\n                    if(checkpoint) {\r\n                        self.lastCheckpoint = checkpoint;\r\n                    }\r\n                }\r\n                else {\r\n                    if(self.message_callback) {\r\n                        self.message_callback(message);\r\n                    }\r\n                }\r\n            });\r\n            \r\n            this.connection.onClose(function() {\r\n                if(self.firepotionTimeout) {\r\n                    clearTimeout(self.firepotionTimeout);\r\n                }\r\n                clearTimeout(self.disconnectTimeout);\r\n                if(self.exit_callback) {\r\n                    self.exit_callback();\r\n                }\r\n            });\r\n            \r\n            this.connection.sendUTF8(\"go\"); // Notify client that the HELLO/WELCOME handshake can start\r\n        }\r\n        \r\n        destroy () {\r\n            var self = this;\r\n            \r\n            this.forEachAttacker(function(mob) {\r\n                mob.clearTarget();\r\n            });\r\n            this.attackers = {};\r\n            \r\n            this.forEachHater(function(mob) {\r\n                mob.forgetPlayer(self.id);\r\n            });\r\n            this.haters = {};\r\n        }\r\n        \r\n        getState () {\r\n            var basestate = this._getBaseState(),\r\n                state = [this.name, this.orientation, this.armor, this.weapon];\r\n    \r\n            if(this.target) {\r\n                state.push(this.target);\r\n            }\r\n            \r\n            return basestate.concat(state);\r\n        }\r\n        \r\n        send (message) {\r\n            this.connection.send(message);\r\n        }\r\n        /** 广播 */\r\n        broadcast (message, ignoreSelf?) {\r\n            if(this.broadcast_callback) {\r\n                this.broadcast_callback(message, ignoreSelf === undefined ? true : ignoreSelf);\r\n            }\r\n        }\r\n        \r\n        broadcastToZone (message, ignoreSelf) {\r\n            if(this.broadcastzone_callback) {\r\n                this.broadcastzone_callback(message, ignoreSelf === undefined ? true : ignoreSelf);\r\n            }\r\n        }\r\n        \r\n        onExit (callback) {\r\n            this.exit_callback = callback;\r\n        }\r\n        \r\n        onMove (callback) {\r\n            this.move_callback = callback;\r\n        }\r\n        \r\n        onLootMove (callback) {\r\n            this.lootmove_callback = callback;\r\n        }\r\n        \r\n        onZone (callback) {\r\n            this.zone_callback = callback;\r\n        }\r\n        \r\n        onOrient (callback) {\r\n            this.orient_callback = callback;\r\n        }\r\n        \r\n        onMessage (callback) {\r\n            this.message_callback = callback;\r\n        }\r\n        /** 监听广播 */\r\n        onBroadcast (callback) {\r\n            this.broadcast_callback = callback;\r\n        }\r\n        \r\n        onBroadcastToZone (callback) {\r\n            this.broadcastzone_callback = callback;\r\n        }\r\n        \r\n        equip (item) {\r\n            return new Messages.EquipItem(this, item);\r\n        }\r\n        \r\n        addHater (mob) {\r\n            if(mob) {\r\n                if(!(mob.id in this.haters)) {\r\n                    this.haters[mob.id] = mob;\r\n                }\r\n            }\r\n        }\r\n        \r\n        removeHater (mob) {\r\n            if(mob && mob.id in this.haters) {\r\n                delete this.haters[mob.id];\r\n            }\r\n        }\r\n        \r\n        forEachHater (callback) {\r\n            _.each(this.haters, function(mob) {\r\n                callback(mob);\r\n            });\r\n        }\r\n        \r\n        equipArmor (kind) {\r\n            this.armor = kind;\r\n            this.armorLevel = Properties.getArmorLevel(kind);\r\n        }\r\n        \r\n        equipWeapon (kind) {\r\n            this.weapon = kind;\r\n            this.weaponLevel = Properties.getWeaponLevel(kind);\r\n        }\r\n        \r\n        equipItem (item) {\r\n            if(item) {\r\n                console.log(this.name + \" equips \" + Types.getKindAsString(item.kind));\r\n                \r\n                if(Types.isArmor(item.kind)) {\r\n                    this.equipArmor(item.kind);\r\n                    this.updateHitPoints();\r\n                    this.send(new Messages.HitPoints(this.maxHitPoints).serialize());\r\n                } else if(Types.isWeapon(item.kind)) {\r\n                    this.equipWeapon(item.kind);\r\n                }\r\n            }\r\n        }\r\n        \r\n        updateHitPoints () {\r\n            this.resetHitPoints(Formulas.hp(this.armorLevel));\r\n        }\r\n        \r\n        updatePosition () {\r\n            if(this.requestpos_callback) {\r\n                var pos = this.requestpos_callback();\r\n                this.setPosition(pos.x, pos.y);\r\n            }\r\n        }\r\n        \r\n        onRequestPosition (callback) {\r\n            this.requestpos_callback = callback;\r\n        }\r\n\r\n        /** \r\n         * 重置超时 \r\n         */\r\n        resetTimeout () {\r\n            clearTimeout(this.disconnectTimeout);\r\n            this.disconnectTimeout = setTimeout(this.timeout.bind(this), 1000 * 60 * 15); // 15 min.\r\n        }\r\n        /** \r\n         * 客户端15分钟都没动了,超时 \r\n         */\r\n        timeout () {\r\n            //发送 timeout 字段\r\n            this.connection.sendUTF8(\"timeout\")\r\n            //关闭与玩家的连接\r\n            this.connection.close(\"玩家闲置了15分钟\");\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class Properties {\r\n        static rat = {\r\n            drops: {\r\n                flask: 40,\r\n                burger: 10,\r\n                firepotion: 5\r\n            },\r\n            hp: 25,\r\n            armor: 1,\r\n            weapon: 1\r\n        }\r\n        \r\n        static skeleton = {\r\n            drops: {\r\n                flask: 40,\r\n                mailarmor: 10,\r\n                axe: 20,\r\n                firepotion: 5\r\n            },\r\n            hp: 110,\r\n            armor: 2,\r\n            weapon: 2\r\n        }\r\n        \r\n        static goblin = {\r\n            drops: {\r\n                flask: 50,\r\n                leatherarmor: 20,\r\n                axe: 10,\r\n                firepotion: 5\r\n            },\r\n            hp: 90,\r\n            armor: 2,\r\n            weapon: 1\r\n        }\r\n        \r\n        static ogre = {\r\n            drops: {\r\n                burger: 10,\r\n                flask: 50,\r\n                platearmor: 20,\r\n                morningstar: 20,\r\n                firepotion: 5\r\n            },\r\n            hp: 200,\r\n            armor: 3,\r\n            weapon: 2\r\n        }\r\n        \r\n        static spectre = {\r\n            drops: {\r\n                flask: 30,\r\n                redarmor: 40,\r\n                redsword: 30,\r\n                firepotion: 5\r\n            },\r\n            hp: 250,\r\n            armor: 2,\r\n            weapon: 4\r\n        }\r\n        \r\n        static deathknight = {\r\n            drops: {\r\n                burger: 95,\r\n                firepotion: 5\r\n            },\r\n            hp: 250,\r\n            armor: 3,\r\n            weapon: 3\r\n        }\r\n        \r\n        static crab = {\r\n            drops: {\r\n                flask: 50,\r\n                axe: 20,\r\n                leatherarmor: 10,\r\n                firepotion: 5\r\n            },\r\n            hp: 60,\r\n            armor: 2,\r\n            weapon: 1\r\n        }\r\n        \r\n        static snake = {\r\n            drops: {\r\n                flask: 50,\r\n                mailarmor: 10,\r\n                morningstar: 10,\r\n                firepotion: 5\r\n            },\r\n            hp: 150,\r\n            armor: 3,\r\n            weapon: 2\r\n        }\r\n        \r\n        static skeleton2 = {\r\n            drops: {\r\n                flask: 60,\r\n                platearmor: 15,\r\n                bluesword: 15,\r\n                firepotion: 5\r\n            },\r\n            hp: 200,\r\n            armor: 3,\r\n            weapon: 3\r\n        }\r\n        \r\n        static eye = {\r\n            drops: {\r\n                flask: 50,\r\n                redarmor: 20,\r\n                redsword: 10,\r\n                firepotion: 5\r\n            },\r\n            hp: 200,\r\n            armor: 3,\r\n            weapon: 3\r\n        }\r\n        \r\n        static bat = {\r\n            drops: {\r\n                flask: 50,\r\n                axe: 10,\r\n                firepotion: 5\r\n            },\r\n            hp: 80,\r\n            armor: 2,\r\n            weapon: 1\r\n        }\r\n        \r\n        static wizard = {\r\n            drops: {\r\n                flask: 50,\r\n                platearmor: 20,\r\n                firepotion: 5\r\n            },\r\n            hp: 100,\r\n            armor: 2,\r\n            weapon: 6\r\n        }\r\n        \r\n        static boss = {\r\n            drops: {\r\n                goldensword: 100\r\n            },\r\n            hp: 700,\r\n            armor: 6,\r\n            weapon: 7\r\n        }\r\n    \r\n    \r\n    \r\n        static getArmorLevel (kind) {\r\n            try {\r\n                if(Types.isMob(kind)) {\r\n                    return Properties[Types.getKindAsString(kind)].armor;\r\n                } else {\r\n                    return Types.getArmorRank(kind) + 1;\r\n                }\r\n            } catch(e) {\r\n                console.log(\"No level found for armor: \"+Types.getKindAsString(kind));\r\n            }\r\n        };\r\n        \r\n        static getWeaponLevel (kind) {\r\n            try {\r\n                if(Types.isMob(kind)) {\r\n                    return Properties[Types.getKindAsString(kind)].weapon;\r\n                } else {\r\n                    return Types.getWeaponRank(kind) + 1;\r\n                }\r\n            } catch(e) {\r\n                console.log(\"No level found for weapon: \"+Types.getKindAsString(kind));\r\n            }\r\n        };\r\n        \r\n        static getHitPoints (kind) {\r\n            return Properties[Types.getKindAsString(kind)].hp;\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n}","\r\nnamespace server {\r\n    export async function loadFile(filepath: string, code: string) {\r\n        return new Promise<string>(function (resolve, reject) {\r\n            fs.readFile(filepath, code, (err, data) => {\r\n                if (err) {\r\n                    reject(err)\r\n                } else {\r\n                    resolve(data)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","namespace server {\r\n    export namespace Utils {\r\n        export function sanitize(string) {\r\n            // Strip unsafe tags, then escape as html entities.\r\n            return sanitizer.escape(sanitizer.sanitize(string));\r\n        }\r\n\r\n        export function random(range:number) {\r\n            return Math.floor(Math.random() * range)\r\n        }\r\n\r\n        export function randomRange(min, max) {\r\n            return min + (Math.random() * (max - min))\r\n        }\r\n\r\n        export function randomInt(min, max) {\r\n            return min + Math.floor(Math.random() * (max - min + 1))\r\n        }\r\n\r\n        export function clamp(min, max, value) {\r\n            if (value < min) {\r\n                return min\r\n            } else if (value > max) {\r\n                return max\r\n            } else {\r\n                return value\r\n            }\r\n        }\r\n\r\n        export function randomOrientation() {\r\n            var o, r = random(4)\r\n\r\n            if (r === 0)\r\n                o = Types.Orientations.LEFT\r\n            if (r === 1)\r\n                o = Types.Orientations.RIGHT\r\n            if (r === 2)\r\n                o = Types.Orientations.UP\r\n            if (r === 3)\r\n                o = Types.Orientations.DOWN\r\n\r\n            return o\r\n        }\r\n\r\n        export function Mixin(target, source) {\r\n            if (source) {\r\n                for (var key, keys = Object.keys(source), l = keys.length; l--;) {\r\n                    key = keys[l]\r\n\r\n                    if (source.hasOwnProperty(key)) {\r\n                        target[key] = source[key]\r\n                    }\r\n                }\r\n            }\r\n            return target\r\n        }\r\n\r\n        export function distanceTo(x, y, x2, y2) {\r\n            var distX = Math.abs(x - x2)\r\n            var distY = Math.abs(y - y2)\r\n\r\n            return (distX > distY) ? distX : distY\r\n        }\r\n    }\r\n}","namespace server{\r\n    export class WorldServer{\r\n        /**\r\n         * WorldServer 的唯一标识\r\n         */\r\n        id: string;\r\n        /**\r\n         * WorldServer 可以容纳的最大人数\r\n         */\r\n        maxPlayers: number;\r\n        server: any;\r\n        ups: number;\r\n        map: Map;\r\n        entities: {};\r\n        players: {};\r\n        mobs: {};\r\n        attackers: {};\r\n        items: {};\r\n        equipping: {};\r\n        hurt: {};\r\n        npcs: {};\r\n        mobAreas: any[];\r\n        chestAreas: any[];\r\n        groups: {};\r\n        outgoingQueues: {};\r\n        itemCount: number;\r\n        playerCount: number;\r\n        zoneGroupsReady: boolean;\r\n        removed_callback: any;\r\n        added_callback: any;\r\n        regen_callback: any;\r\n        init_callback: any;\r\n        connect_callback: any;\r\n        enter_callback: any;\r\n        attack_callback: any;\r\n        /**\r\n         * 初始化 WorldServer\r\n         * @param id 唯一标识\r\n         * @param maxPlayers 可以容纳的最大人数\r\n         */\r\n        constructor (id:string, maxPlayers:number) {\r\n            var self = this;\r\n\r\n            this.id = id;\r\n            this.maxPlayers = maxPlayers;\r\n            this.ups = 50;\r\n            \r\n            this.map = null;\r\n            \r\n            this.entities = {};\r\n            this.players = {};\r\n            this.mobs = {};\r\n            this.attackers = {};\r\n            this.items = {};\r\n            this.equipping = {};\r\n            this.hurt = {};\r\n            this.npcs = {};\r\n            this.mobAreas = [];\r\n            this.chestAreas = [];\r\n            this.groups = {};\r\n            \r\n            this.outgoingQueues = {};\r\n            \r\n            this.itemCount = 0;\r\n            this.playerCount = 0;\r\n            \r\n            this.zoneGroupsReady = false;\r\n            \r\n            this.onPlayerConnect(function(player) {\r\n                player.onRequestPosition(function() {\r\n                    if(player.lastCheckpoint) {\r\n                        return player.lastCheckpoint.getRandomPosition();\r\n                    } else {\r\n                        return self.map.getRandomStartingPosition();\r\n                    }\r\n                });\r\n            });\r\n            \r\n            this.onPlayerEnter(function(player:Player) {\r\n                console.log(\"玩家[\"+player.name + \"] 已加入 世界id:\"+ self.id);\r\n                \r\n                if(!player.hasEnteredGame) {\r\n                    self.incrementPlayerCount();\r\n                }\r\n                \r\n                // Number of players in this world\r\n                // and in the overall server world\r\n                //self.pushToPlayer(player, new Messages.Population(self.playerCount, self.server.connectionsCount()));\r\n                self.updatePopulation();\r\n\r\n                self.pushRelevantEntityListTo(player);\r\n        \r\n                var move_callback = function(x, y) {\r\n                    console.log(\"玩家:[\"+player.name + \"]正在移动到 (\" + x + \", \" + y + \").\");\r\n                    \r\n                    player.forEachAttacker(function(mob) {\r\n                        var target = self.getEntityById(mob.target);\r\n                        if(target) {\r\n                            var pos = self.findPositionNextTo(mob, target);\r\n                            if(mob.distanceToSpawningPoint(pos.x, pos.y) > 50) {\r\n                                mob.clearTarget();\r\n                                mob.forgetEveryone();\r\n                                player.removeAttacker(mob);\r\n                            } else {\r\n                                self.moveEntity(mob, pos.x, pos.y);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                player.onMove(move_callback);\r\n                player.onLootMove(move_callback);\r\n                \r\n                player.onZone(function() {\r\n                    var hasChangedGroups = self.handleEntityGroupMembership(player);\r\n                    \r\n                    if(hasChangedGroups) {\r\n                        self.pushToPreviousGroups(player, new Messages.Destroy(player));\r\n                        self.pushRelevantEntityListTo(player);\r\n                    }\r\n                });\r\n\r\n                player.onBroadcast(function(message, ignoreSelf) {\r\n                    self.pushToAdjacentGroups(player.group, message, ignoreSelf ? player.id : null);\r\n                });\r\n                \r\n                player.onBroadcastToZone(function(message, ignoreSelf) {\r\n                    self.pushToGroup(player.group, message, ignoreSelf ? player.id : null);\r\n                });\r\n        \r\n                player.onExit(function() {\r\n                    console.log(\"玩家:[\"+player.name + \"]已经离开了游戏。\")\r\n\r\n                    self.removePlayer(player)\r\n                    self.decrementPlayerCount()\r\n                    \r\n                    if(self.removed_callback) {\r\n                        self.removed_callback()\r\n                    }\r\n                })\r\n                \r\n                if(self.added_callback) {\r\n                    self.added_callback()\r\n                }\r\n            })\r\n            \r\n            // Called when an entity is attacked by another entity\r\n            this.onEntityAttack(function(attacker) {\r\n                var target = self.getEntityById(attacker.target);\r\n                if(target && attacker.type === \"mob\") {\r\n                    var pos = self.findPositionNextTo(attacker, target);\r\n                    self.moveEntity(attacker, pos.x, pos.y);\r\n                }\r\n            });\r\n            \r\n            this.onRegenTick(function() {\r\n                self.forEachCharacter(function(character) {\r\n                    if(!character.hasFullHealth()) {\r\n                        character.regenHealthBy(Math.floor(character.maxHitPoints / 25));\r\n                \r\n                        if(character.type === 'player') {\r\n                            self.pushToPlayer(character, character.regen());\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        \r\n        /**\r\n         * 开始运行\r\n         * @param mapFile 地图文件路径\r\n         */\r\n        run (mapFile) {\r\n            var self = this;\r\n            this.map = new Map(mapFile);\r\n\r\n            this.map.ready(function() {\r\n                self.initZoneGroups();\r\n                \r\n                self.map.generateCollisionGrid();\r\n                \r\n                // Populate all mob \"roaming\" areas\r\n                _.each(self.map.mobAreas, function(a) {\r\n                    var area = new MobArea(a.id, a.nb, a.type, a.x, a.y, a.width, a.height, self);\r\n                    area.spawnMobs();\r\n                    area.onEmpty(self.handleEmptyMobArea.bind(self, area));\r\n                    \r\n                    self.mobAreas.push(area);\r\n                });\r\n                \r\n                // Create all chest areas\r\n                _.each(self.map.chestAreas, function(a) {\r\n                    var area = new ChestArea(a.id, a.x, a.y, a.w, a.h, a.tx, a.ty, a.i, self);\r\n                    self.chestAreas.push(area);\r\n                    area.onEmpty(self.handleEmptyChestArea.bind(self, area));\r\n                });\r\n                \r\n                // Spawn static chests\r\n                _.each(self.map.staticChests, function(chest) {\r\n                    var c = self.createChest(chest.x, chest.y, chest.i);\r\n                    self.addStaticItem(c);\r\n                });\r\n                \r\n                // Spawn static entities\r\n                self.spawnStaticEntities();\r\n                \r\n                // Set maximum number of entities contained in each chest area\r\n                _.each(self.chestAreas, function(area) {\r\n                    area.setNumberOfEntities(area.entities.length);\r\n                });\r\n            });\r\n            \r\n            var regenCount = this.ups * 2;\r\n            var updateCount = 0;\r\n            setInterval(function() {\r\n                self.processGroups();\r\n                self.processQueues();\r\n                \r\n                if(updateCount < regenCount) {\r\n                    updateCount += 1;\r\n                } else {\r\n                    if(self.regen_callback) {\r\n                        self.regen_callback();\r\n                    }\r\n                    updateCount = 0;\r\n                }\r\n            } , 1000 / this.ups);\r\n            \r\n            console.log(\"\"+this.id+\" 创建成功 (可容纳: \"+this.maxPlayers+\" 玩家).\");\r\n        }\r\n        \r\n        setUpdatesPerSecond (ups) {\r\n            this.ups = ups;\r\n        }\r\n        \r\n        onInit (callback) {\r\n            this.init_callback = callback;\r\n        }\r\n\r\n        /**\r\n         * 当玩家连接\r\n         * @param callback 回调函数\r\n         */\r\n        onPlayerConnect (callback) {\r\n            this.connect_callback = callback;\r\n        }\r\n        \r\n        onPlayerEnter (callback) {\r\n            this.enter_callback = callback;\r\n        }\r\n        \r\n        onPlayerAdded (callback) {\r\n            this.added_callback = callback;\r\n        }\r\n        \r\n        onPlayerRemoved (callback) {\r\n            this.removed_callback = callback;\r\n        }\r\n        \r\n        onRegenTick (callback) {\r\n            this.regen_callback = callback;\r\n        }\r\n        \r\n        pushRelevantEntityListTo (player) {\r\n            var entities;\r\n            \r\n            if(player && (player.group in this.groups)) {\r\n                entities = _.keys(this.groups[player.group].entities);\r\n                entities = _.reject(entities, function(id) { return id == player.id; });\r\n                entities = _.map(entities, function(id) { return parseInt(id); });\r\n                if(entities) {\r\n                    this.pushToPlayer(player, new Messages.List(entities));\r\n                }\r\n            }\r\n        }\r\n        \r\n        pushSpawnsToPlayer (player, ids) {\r\n            var self = this;\r\n            \r\n            _.each(ids, function(id) {\r\n                var entity = self.getEntityById(id);\r\n                if(entity) {\r\n                    self.pushToPlayer(player, new Messages.Spawn(entity));\r\n                }\r\n            });\r\n            \r\n            console.log(\"Pushed \"+_.size(ids)+\" new spawns to \"+player.id);\r\n        }\r\n        \r\n        pushToPlayer (player, message) {\r\n            if(player && player.id in this.outgoingQueues) {\r\n                this.outgoingQueues[player.id].push(message.serialize());\r\n            } else {\r\n                console.log(\"pushToPlayer: player was undefined\");\r\n            }\r\n        }\r\n        \r\n        pushToGroup (groupId, message, ignoredPlayer?) {\r\n            var self = this,\r\n                group = this.groups[groupId];\r\n            \r\n            if(group) {\r\n                _.each(group.players, function(playerId) {\r\n                    if(playerId != ignoredPlayer) {\r\n                        self.pushToPlayer(self.getEntityById(playerId), message);\r\n                    }\r\n                });\r\n            } else {\r\n                console.log(\"groupId: \"+groupId+\" is not a valid group\");\r\n            }\r\n        }\r\n        /** 推送到相邻的组 */\r\n        pushToAdjacentGroups (groupId, message, ignoredPlayer?) {\r\n            var self = this;\r\n            self.map.forEachAdjacentGroup(groupId, function(id) {\r\n                self.pushToGroup(id, message, ignoredPlayer);\r\n            });\r\n        }\r\n        \r\n        pushToPreviousGroups (player, message) {\r\n            var self = this;\r\n            \r\n            // Push this message to all groups which are not going to be updated anymore,\r\n            // since the player left them.\r\n            _.each(player.recentlyLeftGroups, function(id) {\r\n                self.pushToGroup(id, message);\r\n            });\r\n            player.recentlyLeftGroups = [];\r\n        }\r\n        \r\n        pushBroadcast (message, ignoredPlayer?) {\r\n            for(var id in this.outgoingQueues) {\r\n                if(id != ignoredPlayer) {\r\n                    this.outgoingQueues[id].push(message.serialize());\r\n                }\r\n            }\r\n        }\r\n        \r\n        processQueues () {\r\n            var self = this,\r\n                connection;\r\n\r\n            for(var id in this.outgoingQueues) {\r\n                if(this.outgoingQueues[id].length > 0) {\r\n                    connection = this.server.getConnection(id);\r\n                    connection.send(this.outgoingQueues[id]);\r\n                    this.outgoingQueues[id] = [];\r\n                }\r\n            }\r\n        }\r\n        \r\n        addEntity (entity) {\r\n            this.entities[entity.id] = entity;\r\n            this.handleEntityGroupMembership(entity);\r\n        }\r\n        \r\n        removeEntity (entity) {\r\n            if(entity.id in this.entities) {\r\n                delete this.entities[entity.id];\r\n            }\r\n            if(entity.id in this.mobs) {\r\n                delete this.mobs[entity.id];\r\n            }\r\n            if(entity.id in this.items) {\r\n                delete this.items[entity.id];\r\n            }\r\n            \r\n            if(entity.type === \"mob\") {\r\n                this.clearMobAggroLink(entity);\r\n                this.clearMobHateLinks(entity);\r\n            }\r\n            \r\n            entity.destroy();\r\n            this.removeFromGroups(entity);\r\n            console.log(\"Removed \"+ Types.getKindAsString(entity.kind) +\" : \"+ entity.id);\r\n        }\r\n        \r\n        addPlayer (player) {\r\n            this.addEntity(player);\r\n            this.players[player.id] = player;\r\n            this.outgoingQueues[player.id] = [];\r\n            \r\n            //console.log(\"Added player : \" + player.id);\r\n        }\r\n        \r\n        removePlayer (player) {\r\n            player.broadcast(player.despawn());\r\n            this.removeEntity(player);\r\n            delete this.players[player.id];\r\n            delete this.outgoingQueues[player.id];\r\n        }\r\n        \r\n        addMob (mob) {\r\n            this.addEntity(mob);\r\n            this.mobs[mob.id] = mob;\r\n        }\r\n        \r\n        addNpc (kind, x, y) {\r\n            var npc = new Npc('8'+x+''+y, kind, x, y);\r\n            this.addEntity(npc);\r\n            this.npcs[npc.id] = npc;\r\n            \r\n            return npc;\r\n        }\r\n        \r\n        addItem (item) {\r\n            this.addEntity(item);\r\n            this.items[item.id] = item;\r\n            \r\n            return item;\r\n        }\r\n\r\n        createItem (kind, x, y) {\r\n            var id = '9'+this.itemCount++,\r\n                item = null;\r\n            \r\n            if(kind === Types.Entities.CHEST) {\r\n                item = new Chest(id, x, y);\r\n            } else {\r\n                item = new Item(id, kind, x, y);\r\n            }\r\n            return item;\r\n        }\r\n\r\n        createChest (x, y, items) {\r\n            var chest = this.createItem(Types.Entities.CHEST, x, y);\r\n            chest.setItems(items);\r\n            return chest;\r\n        }\r\n        \r\n        addStaticItem (item) {\r\n            item.isStatic = true;\r\n            item.onRespawn(this.addStaticItem.bind(this, item));\r\n            \r\n            return this.addItem(item);\r\n        }\r\n        \r\n        addItemFromChest (kind, x, y) {\r\n            var item = this.createItem(kind, x, y);\r\n            item.isFromChest = true;\r\n            \r\n            return this.addItem(item);\r\n        }\r\n        \r\n        /**\r\n         * The mob will no longer be registered as an attacker of its current target.\r\n         */\r\n        clearMobAggroLink (mob) {\r\n            var player = null;\r\n            if(mob.target) {\r\n                player = this.getEntityById(mob.target);\r\n                if(player) {\r\n                    player.removeAttacker(mob);\r\n                }\r\n            }\r\n        }\r\n\r\n        clearMobHateLinks (mob) {\r\n            var self = this;\r\n            if(mob) {\r\n                _.each(mob.hatelist, function(obj) {\r\n                    var player = self.getEntityById(obj.id);\r\n                    if(player) {\r\n                        player.removeHater(mob);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n        forEachEntity (callback) {\r\n            for(var id in this.entities) {\r\n                callback(this.entities[id]);\r\n            }\r\n        }\r\n        \r\n        forEachPlayer (callback) {\r\n            for(var id in this.players) {\r\n                callback(this.players[id]);\r\n            }\r\n        }\r\n        \r\n        forEachMob (callback) {\r\n            for(var id in this.mobs) {\r\n                callback(this.mobs[id]);\r\n            }\r\n        }\r\n        \r\n        forEachCharacter (callback) {\r\n            this.forEachPlayer(callback);\r\n            this.forEachMob(callback);\r\n        }\r\n        \r\n        handleMobHate (mobId, playerId, hatePoints) {\r\n            var mob = this.getEntityById(mobId),\r\n                player = this.getEntityById(playerId),\r\n                mostHated;\r\n            \r\n            if(player && mob) {\r\n                mob.increaseHateFor(playerId, hatePoints);\r\n                player.addHater(mob);\r\n                \r\n                if(mob.hitPoints > 0) { // only choose a target if still alive\r\n                    this.chooseMobTarget(mob);\r\n                }\r\n            }\r\n        }\r\n        \r\n        chooseMobTarget (mob, hateRank?) {\r\n            var player = this.getEntityById(mob.getHatedPlayerId(hateRank));\r\n            \r\n            // If the mob is not already attacking the player, create an attack link between them.\r\n            if(player && !(mob.id in player.attackers)) {\r\n                this.clearMobAggroLink(mob);\r\n                \r\n                player.addAttacker(mob);\r\n                mob.setTarget(player);\r\n                \r\n                this.broadcastAttacker(mob);\r\n                console.log(mob.id + \" is now attacking \" + player.id);\r\n            }\r\n        }\r\n        \r\n        onEntityAttack (callback) {\r\n            this.attack_callback = callback;\r\n        }\r\n        \r\n        getEntityById (id) {\r\n            if(id in this.entities) {\r\n                return this.entities[id];\r\n            } else {\r\n                console.log(\"Unknown entity : \" + id);\r\n            }\r\n        }\r\n        \r\n        getPlayerCount () {\r\n            var count = 0;\r\n            for(var p in this.players) {\r\n                if(this.players.hasOwnProperty(p)) {\r\n                    count += 1;\r\n                }\r\n            }\r\n            return count;\r\n        }\r\n        \r\n        broadcastAttacker (character) {\r\n            if(character) {\r\n                this.pushToAdjacentGroups(character.group, character.attack(), character.id);\r\n            }\r\n            if(this.attack_callback) {\r\n                this.attack_callback(character);\r\n            }\r\n        }\r\n        \r\n        handleHurtEntity (entity, attacker, damage?) {\r\n            var self = this;\r\n            \r\n            if(entity.type === 'player') {\r\n                // A player is only aware of his own hitpoints\r\n                this.pushToPlayer(entity, entity.health());\r\n            }\r\n            \r\n            if(entity.type === 'mob') {\r\n                // Let the mob's attacker (player) know how much damage was inflicted\r\n                this.pushToPlayer(attacker, new Messages.Damage(entity, damage));\r\n            }\r\n\r\n            // If the entity is about to die\r\n            if(entity.hitPoints <= 0) {\r\n                if(entity.type === \"mob\") {\r\n                    var mob = entity,\r\n                        item = this.getDroppedItem(mob);\r\n                    \r\n                    this.pushToPlayer(attacker, new Messages.Kill(mob));\r\n                    this.pushToAdjacentGroups(mob.group, mob.despawn()); // Despawn must be enqueued before the item drop\r\n                    if(item) {\r\n                        this.pushToAdjacentGroups(mob.group, mob.drop(item));\r\n                        this.handleItemDespawn(item);\r\n                    }\r\n                }\r\n        \r\n                if(entity.type === \"player\") {\r\n                    this.handlePlayerVanish(entity);\r\n                    this.pushToAdjacentGroups(entity.group, entity.despawn());\r\n                }\r\n        \r\n                this.removeEntity(entity);\r\n            }\r\n        }\r\n        \r\n        despawn (entity) {\r\n            this.pushToAdjacentGroups(entity.group, entity.despawn());\r\n\r\n            if(entity.id in this.entities) {\r\n                this.removeEntity(entity);\r\n            }\r\n        }\r\n        \r\n        spawnStaticEntities () {\r\n            var self = this,\r\n                count = 0;\r\n            \r\n            _.each(this.map.staticEntities, function(kindName, tid) {\r\n                var kind = Types.getKindFromString(kindName),\r\n                    pos = self.map.tileIndexToGridPosition(tid);\r\n                \r\n                if(Types.isNpc(kind)) {\r\n                    self.addNpc(kind, pos.x + 1, pos.y);\r\n                }\r\n                if(Types.isMob(kind)) {\r\n                    var mob = new Mob('7' + kind + count++, kind, pos.x + 1, pos.y);\r\n                    mob.onRespawn(function() {\r\n                        mob.isDead = false;\r\n                        self.addMob(mob);\r\n                        if(mob.area && mob.area instanceof ChestArea) {\r\n                            mob.area.addToArea(mob);\r\n                        }\r\n                    });\r\n                    mob.onMove(self.onMobMoveCallback.bind(self));\r\n                    self.addMob(mob);\r\n                    self.tryAddingMobToChestArea(mob);\r\n                }\r\n                if(Types.isItem(kind)) {\r\n                    self.addStaticItem(self.createItem(kind, pos.x + 1, pos.y));\r\n                }\r\n            });\r\n        }\r\n        /** 是否有效位置 */\r\n        isValidPosition (x, y) {\r\n            if(this.map && _.isNumber(x) && _.isNumber(y) && !this.map.isOutOfBounds(x, y) && !this.map.isColliding(x, y)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        \r\n        handlePlayerVanish (player) {\r\n            var self = this,\r\n                previousAttackers = [];\r\n            \r\n            // When a player dies or teleports, all of his attackers go and attack their second most hated player.\r\n            player.forEachAttacker(function(mob) {\r\n                previousAttackers.push(mob);\r\n                self.chooseMobTarget(mob, 2);\r\n            });\r\n            \r\n            _.each(previousAttackers, function(mob) {\r\n                player.removeAttacker(mob);\r\n                mob.clearTarget();\r\n                mob.forgetPlayer(player.id, 1000);\r\n            });\r\n            \r\n            this.handleEntityGroupMembership(player);\r\n        }\r\n        \r\n        setPlayerCount (count) {\r\n            this.playerCount = count;\r\n        }\r\n        \r\n        incrementPlayerCount () {\r\n            this.setPlayerCount(this.playerCount + 1);\r\n        }\r\n        \r\n        decrementPlayerCount () {\r\n            if(this.playerCount > 0) {\r\n                this.setPlayerCount(this.playerCount - 1);\r\n            }\r\n        }\r\n        \r\n        getDroppedItem (mob) {\r\n            var kind = Types.getKindAsString(mob.kind),\r\n                drops = Properties[kind].drops,\r\n                v = Utils.random(100),\r\n                p = 0,\r\n                item = null;\r\n            \r\n            for(var itemName in drops) {\r\n                var percentage = drops[itemName];\r\n                \r\n                p += percentage;\r\n                if(v <= p) {\r\n                    item = this.addItem(this.createItem(Types.getKindFromString(itemName), mob.x, mob.y));\r\n                    break;\r\n                }\r\n            }\r\n            return item;\r\n        }\r\n        \r\n        onMobMoveCallback (mob) {\r\n            this.pushToAdjacentGroups(mob.group, new Messages.Move(mob));\r\n            this.handleEntityGroupMembership(mob);\r\n        }\r\n        \r\n        findPositionNextTo (entity, target) {\r\n            var valid = false,\r\n                pos;\r\n            \r\n            while(!valid) {\r\n                pos = entity.getPositionNextTo(target);\r\n                valid = this.isValidPosition(pos.x, pos.y);\r\n            }\r\n            return pos;\r\n        }\r\n        \r\n        initZoneGroups () {\r\n            var self = this;\r\n            \r\n            this.map.forEachGroup(function(id) {\r\n                self.groups[id] = { entities: {} ,\r\n                                    players: [],\r\n                                    incoming: []};\r\n            });\r\n            this.zoneGroupsReady = true;\r\n        }\r\n        \r\n        removeFromGroups (entity) {\r\n            var self = this,\r\n                oldGroups = [];\r\n            \r\n            if(entity && entity.group) {\r\n                \r\n                var group = this.groups[entity.group];\r\n                if(entity instanceof Player) {\r\n                    group.players = _.reject(group.players, function(id) { return id === entity.id; });\r\n                }\r\n                \r\n                this.map.forEachAdjacentGroup(entity.group, function(id) {\r\n                    if(entity.id in self.groups[id].entities) {\r\n                        delete self.groups[id].entities[entity.id];\r\n                        oldGroups.push(id);\r\n                    }\r\n                });\r\n                entity.group = null;\r\n            }\r\n            return oldGroups;\r\n        }\r\n        \r\n        /**\r\n         * Registers an entity as \"incoming\" into several groups, meaning that it just entered them.\r\n         * All players inside these groups will receive a Spawn message when WorldServer.processGroups is called.\r\n         */\r\n        addAsIncomingToGroup (entity, groupId) {\r\n            var self = this,\r\n                isChest = entity && entity instanceof Chest,\r\n                isItem = entity && entity instanceof Item,\r\n                isDroppedItem =  entity && isItem && !entity.isStatic && !entity.isFromChest;\r\n            \r\n            if(entity && groupId) {\r\n                this.map.forEachAdjacentGroup(groupId, function(id) {\r\n                    var group = self.groups[id];\r\n                    \r\n                    if(group) {\r\n                        if(!_.include(group.entities, entity.id)\r\n                        //  Items dropped off of mobs are handled differently via DROP messages. See handleHurtEntity.\r\n                        && (!isItem || isChest || (isItem && !isDroppedItem))) {\r\n                            group.incoming.push(entity);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n        addToGroup (entity, groupId) {\r\n            var self = this,\r\n                newGroups = [];\r\n            \r\n            if(entity && groupId && (groupId in this.groups)) {\r\n                this.map.forEachAdjacentGroup(groupId, function(id) {\r\n                    self.groups[id].entities[entity.id] = entity;\r\n                    newGroups.push(id);\r\n                });\r\n                entity.group = groupId;\r\n                \r\n                if(entity instanceof Player) {\r\n                    this.groups[groupId].players.push(entity.id);\r\n                }\r\n            }\r\n            return newGroups;\r\n        }\r\n        \r\n        logGroupPlayers (groupId) {\r\n            console.log(\"Players inside group \"+groupId+\":\");\r\n            _.each(this.groups[groupId].players, function(id) {\r\n                console.log(\"- player \"+id);\r\n            });\r\n        }\r\n        \r\n        handleEntityGroupMembership (entity) {\r\n            var hasChangedGroups = false;\r\n            if(entity) {\r\n                var groupId = this.map.getGroupIdFromPosition(entity.x, entity.y);\r\n                if(!entity.group || (entity.group && entity.group !== groupId)) {\r\n                    hasChangedGroups = true;\r\n                    this.addAsIncomingToGroup(entity, groupId);\r\n                    var oldGroups = this.removeFromGroups(entity);\r\n                    var newGroups = this.addToGroup(entity, groupId);\r\n                    \r\n                    if(_.size(oldGroups) > 0) {\r\n                        entity.recentlyLeftGroups = _.difference(oldGroups, newGroups);\r\n                        console.log(\"group diff: \" + entity.recentlyLeftGroups);\r\n                    }\r\n                }\r\n            }\r\n            return hasChangedGroups;\r\n        }\r\n        \r\n        processGroups () {\r\n            var self = this;\r\n            \r\n            if(this.zoneGroupsReady) {\r\n                this.map.forEachGroup(function(id) {\r\n                    var spawns = [];\r\n                    if(self.groups[id].incoming.length > 0) {\r\n                        spawns = _.each(self.groups[id].incoming, function(entity) {\r\n                            if(entity instanceof Player) {\r\n                                self.pushToGroup(id, new Messages.Spawn(entity), entity.id);\r\n                            } else {\r\n                                self.pushToGroup(id, new Messages.Spawn(entity));\r\n                            }\r\n                        });\r\n                        self.groups[id].incoming = [];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n        moveEntity (entity, x, y) {\r\n            if(entity) {\r\n                entity.setPosition(x, y);\r\n                this.handleEntityGroupMembership(entity);\r\n            }\r\n        }\r\n        \r\n        handleItemDespawn (item) {\r\n            var self = this;\r\n            \r\n            if(item) {\r\n                item.handleDespawn({\r\n                    beforeBlinkDelay: 10000,\r\n                    blinkCallback:function() {\r\n                        self.pushToAdjacentGroups(item.group, new Messages.Blink(item));\r\n                    } ,\r\n                    blinkingDuration: 4000,\r\n                    despawnCallback:function() {\r\n                        self.pushToAdjacentGroups(item.group, new Messages.Destroy(item));\r\n                        self.removeEntity(item);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n        handleEmptyMobArea (area) {\r\n\r\n        }\r\n        \r\n        handleEmptyChestArea (area) {\r\n            if(area) {\r\n                var chest = this.addItem(this.createChest(area.chestX, area.chestY, area.items));\r\n                this.handleItemDespawn(chest);\r\n            }\r\n        }\r\n        \r\n        handleOpenedChest (chest, player) {\r\n            this.pushToAdjacentGroups(chest.group, chest.despawn());\r\n            this.removeEntity(chest);\r\n            \r\n            var kind = chest.getRandomItem();\r\n            if(kind) {\r\n                var item = this.addItemFromChest(kind, chest.x, chest.y);\r\n                this.handleItemDespawn(item);\r\n            }\r\n        }\r\n        \r\n        tryAddingMobToChestArea (mob) {\r\n            _.each(this.chestAreas, function(area) {\r\n                if(area.contains(mob)) {\r\n                    area.addToArea(mob);\r\n                }\r\n            });\r\n        }\r\n        \r\n        /**\r\n         * 更新玩家数量\r\n         * @param totalPlayers \r\n         */\r\n        updatePopulation (totalPlayers?) {\r\n            totalPlayers = totalPlayers ? totalPlayers : this.server.connectionsCount();\r\n            \r\n            console.log(\"服务器上玩家数/玩家峰值: \" + this.playerCount + \" / \" + totalPlayers)\r\n            this.pushBroadcast(new Messages.Population(this.playerCount, totalPlayers));\r\n        }\r\n    }\r\n}","namespace server {\r\n\t//PROTO-STRUCT-BEGIN\r\n\texport interface ICreateRoomBst {\r\n\t\troomInfo?: (IRoomInfo | null);\r\n\t}\r\n\texport interface IJoinRoomBst {\r\n\t\troomInfo?: (IRoomInfo | null);\r\n\t\tjoinPlayerId?: (string | null);\r\n\t}\r\n\texport interface ILeaveRoomBst {\r\n\t\troomInfo?: (IRoomInfo | null);\r\n\t\tleavePlayerId?: (string | null);\r\n\t}\r\n\texport interface IRemovePlayerBst {\r\n\t\troomInfo?: (IRoomInfo | null);\r\n\t\tremovePlayerId?: (string | null);\r\n\t\towner?: (string | null);\r\n\t}\r\n\texport interface IChangeRoomBst {\r\n\t\troomInfo?: (IRoomInfo | null);\r\n\t\towner?: (string | null);\r\n\t}\r\n\texport interface IChangeCustomPlayerStatusBst {\r\n\t\tchangePlayerId?: (string | null);\r\n\t\tcustomPlayerStatus?: (number | null);\r\n\t\troomId?: (number | null);\r\n\t\troomInfo?: (IRoomInfo | null);\r\n\t}\r\n\texport interface IChangedPlayerNetworkStateBst {\r\n\t\tchangePlayerId?: (string | null);\r\n\t\tnetworkState?: (NetworkState | null);\r\n\t\troomId?: (number | null);\r\n\t\troomInfo?: (IRoomInfo | null);\r\n\t}\r\n\texport interface IMessageRelayBst {\r\n\t\troomId?: (number | null);\r\n\t\troomInfo?: (IRoomInfo | null);\r\n\t}\r\n\texport interface IDestroyRoomBst {\r\n\t\troomId?: (number | null);\r\n\t}\r\n\texport interface IRoomInfo {\r\n\t\trelaySvrAddr?: (string | null);\r\n\t\troomId?: (number | null);\r\n\t\troomName?: (string | null);\r\n\t\tmaxPlayers?: (number | null);\r\n\t\troomType?: (string | null);\r\n\t\tisViewed?: (boolean | null);\r\n\t\tviewerList?: (IPlayerInfo[] | null);\r\n\t\towner?: (string | null);\r\n\t\tplayerList?: (IPlayerInfo[] | null);\r\n\t\tcustomProperties?: (string | null);\r\n\t\tcreateType?: (CreateType | null);\r\n\t\tisPrivate?: (boolean | null);\r\n\t\tframeStatus?: (FrameStatusType | null);\r\n\t\tframeRate?: (number | null);\r\n\t\tcreateTime?: (number | null);\r\n\t\tstartGameTime?: (number | null);\r\n\t\tteams?: (ITeam[] | null);\r\n\t}\r\n\texport interface IPlayerInfo {\r\n\t\tplayerId?: (string | null);\r\n\t\tplayerName?: (string | null);\r\n\t\tcustomPlayerStatus?: (number | null);\r\n\t\tnetworkStatus?: (NetworkState | null);\r\n\t\tcustomProfile?: (string | null);\r\n\t\trelayNetworkStatus?: (NetworkState | null);\r\n\t\tteamId?: (string | null);\r\n\t}\r\n\texport enum CreateType {\r\n\t\tCOMMONCREATE = 0,\r\n\t\tMATCHCREATE = 1\r\n\t}\r\n\texport enum FrameStatusType {\r\n\t\tSTOP = 0,\r\n\t\tSTART = 1\r\n\t}\r\n\texport interface ITeam {\r\n\t\tteamId?: (string | null);\r\n\t\tname?: (string | null);\r\n\t\tminPlayers?: (number | null);\r\n\t\tmaxPlayers?: (number | null);\r\n\t}\r\n\texport enum NetworkState {\r\n\t\tROOM_OFFLINE = 0,\r\n\t\tROOM_ONLINE = 1,\r\n\t\tRELAY_OFFLINE = 2,\r\n\t\tRELAY_ONLINE = 3\r\n\t}\r\n\t//PROTO-STRUCT-END\r\n\r\n\texport interface GameData {\r\n\t\t[key: string]: any;\r\n\t}\r\n\r\n\texport interface UserDefinedData {\r\n\t\t//[key: string]: any;\r\n\t}\r\n\r\n\tinterface ActionArgsExports {\r\n\t\tdata: GameData\r\n\t}\r\n\r\n\tinterface ActionArgsSDKLogger {\r\n\t\tdebug: (...args: any[]) => void;\r\n\t\tinfo: (...args: any[]) => void;\r\n\t\terror: (...args: any[]) => void;\r\n\t}\r\n\r\n\texport interface ActionArgsSDK {\r\n\t\t/**\r\n\t\t * 游戏 Server 向客户端推送消息。\r\n\t\t */\r\n\t\tsendData(data: { playerIdList: string[]; data: UserDefinedData; }, resendConf?: { timeout: number; maxTry: number; }): void\r\n\t\t/**\r\n\t\t * 模拟客户端给游戏 Server 发送数据。\r\n\t\t */\r\n\t\tdispatchAction(actionData: UserDefinedData): void\r\n\t\t/**\r\n\t\t * `清空 onClientData 队列` 当 gameServer.mode 为 \"sync\" 时，gameServer.onClientData 广播会保存在一个队列里面，在 gameServer.onClientData 回调函数中通过调用 SDK.exitAction 才能处理下一条 gameServer.onClientData 广播。SDK.clearAction 作用就是清空 gameServer.onClientData 队列，可用于游戏结束后游戏 Server 忽略客户端消息的场景。\r\n\t\t */\r\n\t\tclearAction(): void\r\n\t\t/**\r\n\t\t * 当 gameServer.mode 为 \"sync\" 时，需要在 gameServer.onClientData 回调里面显式调用 SDK.exitAction 方法才能继续处理下一条 gameServer.onClientData 广播消息。\r\n\t\t */\r\n\t\texitAction(): void\r\n\t\t/**\r\n\t\t * SDK 提供的日志记录能力。\r\n\t\t * 记录的日志可以在 MGOBE 控制台的游戏 Server 页面查看。\r\n\t\t */\r\n\t\tlogger: ActionArgsSDKLogger\r\n\t}\r\n\r\n\texport interface ActionArgs<T> {\r\n\t\t/** \r\n\t\t * 该属性在 gameServer.onClientData 中有效，其类型为 string，\r\n\t\t * 表示消息发送者的玩家 ID。 \r\n\t\t **/\r\n\t\tsender: string;\r\n\t\t/** \r\n\t\t * 该属性在 gameServer 不同回调中的类型不同，表示该回调的\r\n\t\t * 响应数据。比如在 gameServer.onClientData 中表示玩家发\r\n\t\t * 送给游戏 Server 的数据；在 onJoinRoom 表示加房广播数据；\r\n\t\t * 在 onLeaveRoom 中表示玩家退房广播数据。 \r\n\t\t **/\r\n\t\tactionData: T;\r\n\t\t/**\r\n\t\t * 该属性类型为 GameData，表示游戏数据，开发者可以用来实现\r\n\t\t * 游戏状态同步等功能。在第一次执行 gameServer.onClientData \r\n\t\t * 时会被初始化，在执行 gameServer.onDestroyRoom 时会被销毁。\r\n\t\t */\r\n\t\tgameData: GameData;\r\n\t\t/**\r\n\t\t * 该属性类型为 IRoomInfo，表示当前房间信息。\r\n\t\t */\r\n\t\troom: IRoomInfo\r\n\t\t/**\r\n\t\t * 该属性类型为 object，包含了一个类型为 GameData 的子属性 \r\n\t\t * data，用于更新游戏数据 gameData。\r\n\t\t */\r\n\t\texports: ActionArgsExports\r\n\t\t/** \r\n\t\t * 包含了一系列游戏 Server 提供的方法。 \r\n\t\t **/\r\n\t\tSDK: ActionArgsSDK\r\n\t}\r\n\r\n\texport namespace GameServer {\r\n\t\texport type Receiver<T> = (data: ActionArgs<T>) => void;\r\n\r\n\t\texport type onClientData = Receiver<UserDefinedData>;\r\n\r\n\t\texport type onCreateRoom = Receiver<ICreateRoomBst>;\r\n\t\texport type onJoinRoom = Receiver<IJoinRoomBst>;\r\n\t\texport type onLeaveRoom = Receiver<ILeaveRoomBst>;\r\n\t\texport type onRemovePlayer = Receiver<IRemovePlayerBst>;\r\n\t\texport type onChangeRoom = Receiver<IChangeRoomBst>;\r\n\t\texport type onChangeCustomPlayerStatus = Receiver<IChangeCustomPlayerStatusBst>;\r\n\t\texport type onChangedPlayerNetworkState = Receiver<IChangedPlayerNetworkStateBst>;\r\n\t\texport type onMessageRelay = Receiver<IMessageRelayBst>;\r\n\t\texport type onDestroyRoom = Receiver<IDestroyRoomBst>;\r\n\r\n\t\texport interface IGameServer {\r\n\t\t\tmode?: 'async' | 'sync';\r\n\t\t\tonInitGameData(args: { room: IRoomInfo }): GameData;\r\n\t\t\tonClientData: onClientData;\r\n\t\t\tonCreateRoom?: onCreateRoom;\r\n\t\t\tonJoinRoom?: onJoinRoom;\r\n\t\t\tonLeaveRoom?: onLeaveRoom;\r\n\t\t\tonRemovePlayer?: onRemovePlayer;\r\n\t\t\tonChangeRoom?: onChangeRoom;\r\n\t\t\tonChangeCustomPlayerStatus?: onChangeCustomPlayerStatus;\r\n\t\t\tonChangedPlayerNetworkState?: onChangedPlayerNetworkState;\r\n\t\t\tonMessageRelay?: onMessageRelay;\r\n\t\t\tonDestroyRoom?: onDestroyRoom;\r\n\t\t}\r\n\t}\r\n}"]}